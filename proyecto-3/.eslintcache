[{"C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\index.js":"1","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\App.js":"2","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\Test.js":"4","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\RegistrarArticulo.js":"5","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\RegistrarPromocion.js":"6","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\VistaArticulos.js":"7","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\HistorialCliente.js":"8","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\SelectAdmin.js":"9","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\BusquedaClientexProducto.js":"10","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\TestImage.js":"11","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\RegistrarRegalia.js":"12","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\RegisterPageClient.js":"13","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\TestRegistroArticulo.js":"14","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\HistorialPageCliente.js":"15","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\PantallaPrincipal.js":"16","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\CatalogoCliente.js":"17","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\ComprasPage.js":"18","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\BusquedaArticulo.js":"19"},{"size":548,"mtime":1606953791330,"results":"20","hashOfConfig":"21"},{"size":2308,"mtime":1607840319516,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":8304,"mtime":1606955727492,"results":"24","hashOfConfig":"21"},{"size":29284,"mtime":1607668499191,"results":"25","hashOfConfig":"21"},{"size":30793,"mtime":1607668956300,"results":"26","hashOfConfig":"21"},{"size":4180,"mtime":1607629318700,"results":"27","hashOfConfig":"21"},{"size":11990,"mtime":1607905162939,"results":"28","hashOfConfig":"21"},{"size":4406,"mtime":1607580986201,"results":"29","hashOfConfig":"21"},{"size":7516,"mtime":1608149529814,"results":"30","hashOfConfig":"21"},{"size":2183,"mtime":1607279372999,"results":"31","hashOfConfig":"21"},{"size":31857,"mtime":1608148822660,"results":"32","hashOfConfig":"21"},{"size":45718,"mtime":1608146940850,"results":"33","hashOfConfig":"21"},{"size":18970,"mtime":1607552782868,"results":"34","hashOfConfig":"21"},{"size":6031,"mtime":1607917658243,"results":"35","hashOfConfig":"21"},{"size":8323,"mtime":1608138741209,"results":"36","hashOfConfig":"21"},{"size":12913,"mtime":1608147957914,"results":"37","hashOfConfig":"21"},{"size":16618,"mtime":1608138741208,"results":"38","hashOfConfig":"21"},{"size":172575,"mtime":1608148957276,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1kftsnc",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"42"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\index.js",[],["92","93"],"C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\App.js",["94"],"import './App.css';\nimport Test from './Test';\nimport RegistrarArticulo from './RegistrarArticulo';\nimport RegistrarPromocion from './RegistrarPromocion';\nimport HistorialCliente from './HistorialCliente';\nimport VistaArticulos from './VistaArticulos';\nimport BusquedaArticulo from './BusquedaArticulo';\nimport BusquedaClientexProducto from './BusquedaClientexProducto';\nimport SelectAdmin from './SelectAdmin';\nimport PantallaPrincipal from './PantallaPrincipal';\nimport RegistarRegalia from './RegistrarRegalia';\nimport TestImage from './TestImage';\nimport TestRegistroArticulo from './TestRegistroArticulo';\nimport RegisterPageClient from './RegisterPageClient';\nimport HistorialPageCliente from './HistorialPageCliente';\nimport CatalogoCliente from './CatalogoCliente';\nimport ComprasPage from './ComprasPage';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n      <Route path=\"/RegisterPageClient\">\n          <RegisterPageClient />\n        </Route>\n        <Route path=\"/Test\">\n          <Test />\n        </Route>\n        <Route path=\"/RegistrarArticulo\">\n          <RegistrarArticulo />\n        </Route>\n        <Route path=\"/RegistrarPromocion\">\n          <RegistrarPromocion />\n        </Route>\n        <Route path=\"/HistorialCliente\">\n          <HistorialCliente />\n        </Route>\n        <Route path=\"/VistaArticulos\">\n          <VistaArticulos />\n        </Route>\n        <Route path=\"/BusquedaArticulo\">\n          <BusquedaArticulo />\n        </Route>\n        <Route path=\"/BusquedaClientexProducto\">\n          <BusquedaClientexProducto />\n        </Route>\n        <Route path=\"/SelectAdmin\">\n          <SelectAdmin />\n        </Route>\n        <Route path=\"/RegistarRegalia\">\n          <RegistarRegalia />\n        </Route>\n        <Route path=\"/TestImage\">\n          <TestImage />\n        </Route>\n        <Route path=\"/HistorialPageCliente\">\n          <HistorialPageCliente />\n        </Route>\n        <Route path=\"/CatalogoCliente\">\n          <CatalogoCliente />\n        </Route>\n        <Route path=\"/ComprasPage\">\n          <ComprasPage />\n        </Route>\n        <Route path=\"/\">\n          <PantallaPrincipal />\n        </Route>\n        \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\Test.js",["95","96"],"import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardFooter,\r\n    CardTitle,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport './Test.css';\r\n\r\nclass Test extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        localStorage.clear();\r\n\r\n        return (\r\n            <div className='Test'><Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className='m-auto'>\r\n\r\n                <Navbar.Brand className=\"m-auto\">Bienvenid@</Navbar.Brand>\r\n\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n                    <Nav className=\"m-auto\">\r\n                        <Nav.Link href=\"./RegistrarArticulo\">Registrar Artículo</Nav.Link>\r\n                        <Nav.Link href=\"./RegistrarPromocion\">Registrar Promoción</Nav.Link>\r\n                        <Nav.Link href=\"./BusquedaCliente\">Búsqueda de Cliente</Nav.Link>\r\n                        <Nav.Link href=\"./VistaArticulos\">Vista Artículos</Nav.Link>\r\n                        <Nav.Link href=\"./BusquedaArticulo\">Búsqueda Artículo</Nav.Link>\r\n                        <Nav.Link href=\"./BusquedaClientexProducto\">Búsqueda Cliente por Producto</Nav.Link>\r\n                        <Nav.Link href=\"./Test\">Salir</Nav.Link>\r\n                    </Nav>\r\n\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n\r\n                <br />\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col md=\"12\">\r\n                            <Card className=\"card-user\">\r\n                                <CardHeader>\r\n                                    <CardTitle tag=\"h5\">Registrar un nuevo artículo</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form>\r\n                                        <Row>\r\n                                            <Col className=\"pr-1\" md=\"5\">\r\n                                                <FormGroup>\r\n                                                    <label>Nombre</label>\r\n                                                    <Input\r\n                                                        placeholder=\"Nombre\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col className=\"px-1\" md=\"3\">\r\n                                                <FormGroup>\r\n                                                    <label>Marca</label>\r\n                                                    <Input\r\n                                                        placeholder=\"Marca\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col className=\"pl-1\" md=\"4\">\r\n                                                <FormGroup>\r\n                                                    <FormGroup>\r\n                                                        <label>Precio</label>\r\n                                                        <Input placeholder=\"Precio\" type=\"number\" />\r\n                                                    </FormGroup>\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                        <Col className=\"pr-1\" md=\"5\">\r\n                                                <FormGroup>\r\n                                                    <label>Deportes</label>\r\n                                                    <Input\r\n                                                        placeholder=\"Deportes\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col className=\"px-1\" md=\"3\">\r\n                                                <FormGroup>\r\n                                                    <label>Edicion</label>\r\n                                                    <Input\r\n                                                        placeholder=\"Edicion\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col className=\"pl-1\" md=\"4\">\r\n                                                <FormGroup>\r\n                                                    <FormGroup>\r\n                                                        <label>Unidades Disponibles</label>\r\n                                                        <Input placeholder=\"Numero de unidades\" type=\"number\" />\r\n                                                    </FormGroup>\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col className=\"px-1\" md=\"12\">\r\n                                                <FormGroup>\r\n                                                    <label>Tipo</label>\r\n                                                    <Input\r\n                                                        placeholder=\"Tipo\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col md=\"12\">\r\n                                                <FormGroup>\r\n                                                    <label>About Me</label>\r\n                                                    <Input\r\n                                                        type=\"textarea\"\r\n                                                        defaultValue=\"Oh so, your weak rhyme You doubt I'll bother, reading into it\"\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <div className=\"update ml-auto mr-auto\">\r\n                                                <Button\r\n                                                    className=\"btn-round\"\r\n                                                    color=\"primary\"\r\n                                                    type=\"submit\"\r\n                                                >\r\n                                                    Update Profile\r\n                        </Button>\r\n                                            </div>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n                <br />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\RegistrarArticulo.js",["97","98","99","100","101","102","103","104","105","106","107"],"import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardFooter,\r\n    CardTitle,\r\n    FormGroup,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport \"./RegistrarArticulo.css\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationfactory from 'react-bootstrap-table2-paginator';\r\n\r\nclass RegistrarArticulo extends Component {\r\n\r\n    constructor(props) {\r\n        console.log(\"Entra a RegistrarArticulo\");\r\n        super(props)\r\n        this.state = {\r\n\r\n            nombreArticulo: '',\r\n\r\n            itemsBrand: [],\r\n            BrandListDrop: [\r\n            ],\r\n            brandSelect: '',\r\n\r\n            precioArticulo: 0,\r\n\r\n            unidadDisponibleArticulo: 0,\r\n\r\n            itemsSport: [],\r\n            SportListDrop: [],\r\n            sportSelect: '',\r\n            listaDeportesSeleccionados: [],\r\n            listaTempDeportes: [],\r\n\r\n            itemsProduct_Type: [],\r\n            Product_TypeListDrop: [],\r\n            product_TypeSelect: '',\r\n\r\n            limitadaFlag: \"false\",\r\n            estandarFlag: \"false\",\r\n            limitArticulo: false,\r\n\r\n            profileImg: 'https://cdn.pixabay.com/photo/2017/06/13/12/53/profile-2398782_1280.png',\r\n            imageFlag: false,\r\n\r\n            jsonFile: {\r\n                name: '',\r\n                brand: '',\r\n                price: 0,\r\n                sports: [],\r\n                limit: false,\r\n                units: 0,\r\n                img: null,\r\n                type: ''\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    registrarArticuloNuevo = async () => {\r\n\r\n        const url = `http://localhost:5000/insert_product`;\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(this.state.jsonFile)\r\n        };\r\n\r\n\r\n\r\n        const response = await fetch(url, requestOptions);\r\n        if(response.status === 400){\r\n            Swal.fire(\r\n                'Error',\r\n                'El registro no se realizó de la manera correcta',\r\n                'error'\r\n            );\r\n        }else{\r\n            Swal.fire(\r\n                'Registro Exitoso',\r\n                'El registro se ha realizado de manera exitosa',\r\n                'success'\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    createJsonFile = () => {\r\n        this.state.jsonFile.name = this.state.nombreArticulo;\r\n        this.state.jsonFile.brand = this.state.brandSelect;\r\n        this.state.jsonFile.price = this.state.precioArticulo;\r\n        this.state.jsonFile.sports = this.state.listaTempDeportes;\r\n        this.state.jsonFile.limit = this.state.limitArticulo;\r\n        this.state.jsonFile.units = this.state.unidadDisponibleArticulo;\r\n        this.state.jsonFile.img = this.state.profileImg;\r\n        this.state.jsonFile.type = this.state.product_TypeSelect;\r\n\r\n        console.log(\"El JsonFile\");\r\n        console.log(this.state.jsonFile);\r\n\r\n        this.registrarArticuloNuevo();\r\n    }\r\n\r\n\r\n\r\n    componentDidMount = async (e) => {\r\n\r\n        await fetch(`http://localhost:5000/get_collection?collection=brand`).catch(err => alert(err))\r\n            .then(response => response.json())\r\n            .then(response => this.brandList(response))\r\n            .catch(err => this.errorHandler(err))\r\n\r\n        await fetch(`http://localhost:5000/get_collection?collection=sport`).catch(err => alert(err))\r\n            .then(response => response.json())\r\n            .then(response => this.sportList(response))\r\n            .catch(err => this.errorHandler(err))\r\n\r\n        await fetch(`http://localhost:5000/get_collection?collection=product_type`).catch(err => alert(err))\r\n            .then(response => response.json())\r\n            .then(response => this.product_TypeList(response))\r\n            .catch(err => this.errorHandler(err))\r\n    }\r\n\r\n    brandList = (res) => {\r\n\r\n        this.setState({\r\n            itemsBrand: res\r\n        })\r\n\r\n        this.crearBrandListDropdown();\r\n    }\r\n\r\n    crearBrandListDropdown = () => {\r\n        var temp = [];\r\n        for (let i = 0; i < this.state.itemsBrand.length; i++) {\r\n            temp.push(this.state.itemsBrand[i].name);\r\n            this.actualizarBrandListDropdown(temp);\r\n        }\r\n    }\r\n\r\n    actualizarBrandListDropdown = (res) => {\r\n        this.setState({\r\n            BrandListDrop: res\r\n        })\r\n    }\r\n\r\n    sportList = (res) => {\r\n        this.setState({\r\n            itemsSport: res\r\n        })\r\n        this.crearSportListDropdown();\r\n    }\r\n\r\n    crearSportListDropdown = () => {\r\n        var temp = [];\r\n        for (let i = 0; i < this.state.itemsSport.length; i++) {\r\n            temp.push(this.state.itemsSport[i].name);\r\n            this.actualizarSportListDropdown(temp);\r\n        }\r\n    }\r\n\r\n    actualizarSportListDropdown = (res) => {\r\n        this.setState({\r\n            SportListDrop: res\r\n        })\r\n    }\r\n\r\n    setListaDeportes = () => {\r\n        this.state.listaDeportesSeleccionados.push({ 'name': this.state.sportSelect })\r\n    }\r\n\r\n    product_TypeList = (res) => {\r\n\r\n        this.setState({\r\n            itemsProduct_Type: res\r\n        })\r\n        this.crearProduct_TypeListDropdown();\r\n    }\r\n\r\n    crearProduct_TypeListDropdown = () => {\r\n        var temp = [];\r\n        for (let i = 0; i < this.state.itemsProduct_Type.length; i++) {\r\n            temp.push(this.state.itemsProduct_Type[i].name);\r\n            this.actualizarProduct_TypeListDropdown(temp);\r\n        }\r\n    }\r\n\r\n    actualizarProduct_TypeListDropdown = (res) => {\r\n        this.setState({\r\n            Product_TypeListDrop: res\r\n        })\r\n    }\r\n\r\n    imageHandler = (e) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                this.setState({\r\n                    profileImg: reader.result,\r\n                    imageFlag: true\r\n                })\r\n            }\r\n        }\r\n        reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n\r\n    convertBase64Image = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const filereader = new FileReader();\r\n            filereader.readAsDataURL(file);\r\n\r\n            filereader.onload = () => {\r\n                resolve(filereader.result)\r\n            }\r\n\r\n            filereader.onerror = (error) => {\r\n                reject(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    clickSelectBrand = (event) => {\r\n        this.setState({\r\n            brandSelect: event\r\n        })\r\n    }\r\n\r\n    clickSelectSport = async (event) => {\r\n        this.setState({\r\n            sportSelect: event\r\n        })\r\n        await this.actualizarListaDeportesTemp();\r\n    }\r\n\r\n    actualizarListaDeportesTemp = () => {\r\n        if (this.state.sportSelect === \"\") {\r\n\r\n        } else {\r\n            this.state.listaTempDeportes.push(this.state.sportSelect);\r\n        }\r\n    }\r\n\r\n    clickSelectProduct_Type = (event) => {\r\n        this.setState({\r\n            product_TypeSelect: event\r\n        })\r\n    }\r\n\r\n    clickLimitada = (event) => {\r\n        if (this.state.limitadaFlag === \"true\") {\r\n            this.setState({\r\n                limitadaFlag: \"false\",\r\n                limitArticulo: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                limitadaFlag: \"true\",\r\n                limitArticulo: true\r\n            })\r\n        }\r\n    }\r\n\r\n    clickEstandar = (event) => {\r\n        if (this.state.estandarFlag === \"true\") {\r\n            this.setState({\r\n                estandarFlag: \"false\",\r\n                limitArticulo: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                estandarFlag: \"true\",\r\n                limitArticulo: false\r\n            })\r\n        }\r\n    }\r\n\r\n    clickRegistrar = (event) => {\r\n        if (this.state.nombreArticulo === '') {\r\n            Swal.fire(\r\n                'Error',\r\n                'Por favor introduzca el nombre del artículo',\r\n                'error'\r\n            );\r\n        } else {\r\n            if (this.state.brandSelect === '') {\r\n                Swal.fire(\r\n                    'Error',\r\n                    'Por favor seleccione la marca del artículo',\r\n                    'error'\r\n                );\r\n            } else {\r\n                if (this.state.precioArticulo <= 0) {\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'Por favor introduzca el precio del artículo',\r\n                        'error'\r\n                    );\r\n                }\r\n                else {\r\n                    if (this.state.limitadaFlag === \"false\") {\r\n                        if (this.state.estandarFlag === \"false\") {\r\n                            Swal.fire(\r\n                                'Error',\r\n                                'Por favor seleccionar un tipo de edición',\r\n                                'error'\r\n                            );\r\n                        } else {\r\n                            if (this.state.unidadDisponibleArticulo === 0) {\r\n                                Swal.fire(\r\n                                    'Error',\r\n                                    'Por favor indique las unidades disponibles del artículo',\r\n                                    'error'\r\n                                );\r\n                            } else {\r\n                                if (this.state.product_TypeSelect === '') {\r\n                                    Swal.fire(\r\n                                        'Error',\r\n                                        'Por favor indique el tipo de producto del artículo',\r\n                                        'error'\r\n                                    );\r\n                                } else {\r\n                                    if (this.state.listaDeportesSeleccionados.length === 0) {\r\n                                        Swal.fire(\r\n                                            'Error',\r\n                                            'Por favor seleccione un Deporte asociado con el artículo',\r\n                                            'error'\r\n                                        );\r\n                                    } else {\r\n                                        if (this.state.imageFlag) {\r\n                                            this.createJsonFile();\r\n                                        } else {\r\n                                            Swal.fire(\r\n                                                'Error',\r\n                                                'Por favor seleccione una imagen',\r\n                                                'error'\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (this.state.estandarFlag === \"false\") {\r\n                            if (this.state.unidadDisponibleArticulo <= 0) {\r\n                                Swal.fire(\r\n                                    'Error',\r\n                                    'Por favor indique las unidades disponibles del artículo',\r\n                                    'error'\r\n                                );\r\n                            } else {\r\n                                if (this.state.product_TypeSelect === '') {\r\n                                    Swal.fire(\r\n                                        'Error',\r\n                                        'Por favor indique el tipo de producto del artículo',\r\n                                        'error'\r\n                                    );\r\n                                } else {\r\n                                    if (this.state.listaDeportesSeleccionados.length === 0) {\r\n                                        Swal.fire(\r\n                                            'Error',\r\n                                            'Por favor seleccione un Deporte asociado con el artículo',\r\n                                            'error'\r\n                                        );\r\n                                    } else {\r\n                                        if (this.state.imageFlag) {\r\n                                            this.createJsonFile();\r\n                                        } else {\r\n                                            Swal.fire(\r\n                                                'Error',\r\n                                                'Por favor seleccione una imagen',\r\n                                                'error'\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            Swal.fire(\r\n                                'Error',\r\n                                'Por favor solo seleccionar un tipo de edición',\r\n                                'error'\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    clickNombre = (e) => {\r\n        this.setState({\r\n            nombreArticulo: e.target.value\r\n        })\r\n    }\r\n\r\n    clickPrecio = (e) => {\r\n        this.setState({\r\n            precioArticulo: Number(e.target.value)\r\n        })\r\n    }\r\n\r\n    clickUnidadesDisponibles = (e) => {\r\n        this.setState({\r\n            unidadDisponibleArticulo: Number(e.target.value)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        localStorage.clear();\r\n        const columnsDeportes = [\r\n            { dataField: 'name', text: 'Deporte Seleccionado' }\r\n        ];\r\n\r\n        return (\r\n\r\n            <div className='RegistrarArticulo'>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className='m-auto'>\r\n\r\n                    <Navbar.Brand className=\"m-auto\">Bienvenid@</Navbar.Brand>\r\n\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n                        <Nav className=\"m-auto\">\r\n                            <Nav.Link href=\"./RegistrarArticulo\">Registrar Artículo</Nav.Link>\r\n                            <Nav.Link href=\"./RegistrarPromocion\">Registrar Promoción</Nav.Link>\r\n                            <Nav.Link href=\"./RegistarRegalia\">Registrar Regalía</Nav.Link>\r\n                            <Nav.Link href=\"./SelectAdmin\">Salir</Nav.Link>\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <br />\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1>Agregar Artículo</h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row>\r\n                        <Col>\r\n                            <Card className=\"card-user\">\r\n                                <CardHeader>\r\n                                    <CardTitle tag=\"h3\">Registrar un nuevo artículo</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form>\r\n                                        {/*Primera Fila*/}\r\n                                        <Row>\r\n                                            {/*Primera Columna*/}\r\n                                            <Col>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Nombre</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Input\r\n                                                            placeholder=\"Nombre\"\r\n                                                            type=\"text\"\r\n                                                            onSelect={this.clickNombre}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col> {/*Primera Columna*/}\r\n                                            {/*Segunda Columna*/}\r\n                                            <Col>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Marca</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <DropdownButton\r\n                                                            as={ButtonGroup}\r\n                                                            title={\"Marca a seleccionar\"}\r\n                                                            className='scrollDelDrop'\r\n                                                            onSelect={this.clickSelectBrand}\r\n                                                        >\r\n                                                            {this.state.BrandListDrop.map((name) => (\r\n                                                                <Dropdown.Item eventKey={name}>{name}</Dropdown.Item>\r\n                                                            ))}\r\n                                                        </DropdownButton>\r\n                                                        <p>{this.state.brandSelect}</p>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col> {/*Segunda Columna*/}\r\n                                            {/*Tercera Columna*/}\r\n                                            <Col>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Precio</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Input placeholder=\"Precio\" type=\"number\" onChange={this.clickPrecio} />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col> {/*Tercera Columna*/}\r\n                                        </Row> {/*Primera Fila*/}\r\n                                        <br />\r\n                                        <Row>{/*Segunda Fila*/}\r\n                                            <Col>{/*Primera Columna*/}\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Edición</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Form.Check type=\"checkbox\" label=\"Limitada\" onClick={this.clickLimitada} />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Form.Check type=\"checkbox\" label=\"Estándar\" onClick={this.clickEstandar} />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>{/*Primera Columna*/}\r\n                                            <Col>{/*Segunda Columna*/}\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Unidades Disponibles</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Input placeholder=\"Unidades\" type=\"number\" onChange={this.clickUnidadesDisponibles} />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>{/*Segunda Columna*/}\r\n                                            <Col>{/*Tercera Columna*/}\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Tipo</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <DropdownButton\r\n                                                            as={ButtonGroup}\r\n                                                            title={\"Tipo del producto\"}\r\n                                                            className='scrollDelDrop'\r\n                                                            onSelect={this.clickSelectProduct_Type}\r\n                                                        >\r\n                                                            {this.state.Product_TypeListDrop.map((name) => (\r\n                                                                <Dropdown.Item eventKey={name}>{name}</Dropdown.Item>\r\n                                                            ))}\r\n                                                        </DropdownButton>\r\n                                                        <p>{this.state.product_TypeSelect}</p>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>{/*Tercera Columna*/}\r\n                                        </Row>{/*Segunda Fila*/}\r\n                                        <Row>{/*Tercera Fila*/}\r\n                                            <Col>{/*Única Columna*/}\r\n                                                <Row>{/*Primera Fila*/}\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Deportes</label>\r\n                                                    </Col>\r\n                                                </Row>{/*Primera Fila*/}\r\n                                                <Row>{/*Segunda Fila*/}\r\n                                                    <Col xs={1} md={12}>\r\n                                                        <DropdownButton\r\n                                                            as={ButtonGroup}\r\n                                                            title={\"Deporte a seleccionar\"}\r\n                                                            className='scrollDelDrop'\r\n                                                            onSelect={this.clickSelectSport}\r\n                                                        >\r\n                                                            {this.state.SportListDrop.map((name) => (\r\n                                                                <Dropdown.Item eventKey={name}>{name}</Dropdown.Item>\r\n                                                            ))}\r\n                                                        </DropdownButton>\r\n                                                        <p>{this.state.sportSelect}</p>\r\n                                                        <Button\r\n                                                            className=\"btn-round\"\r\n                                                            color=\"primary\"\r\n                                                            onClick={this.setListaDeportes}\r\n                                                        >\r\n                                                            Añadir\r\n                                                        </Button>\r\n                                                    </Col>\r\n                                                </Row>{/*Segunda Fila*/}\r\n                                                <br />\r\n                                                <Row>{/*Tercera Fila*/}\r\n                                                    <Col>\r\n                                                        <BootstrapTable\r\n                                                            keyField=\"name\"\r\n                                                            data={this.state.listaDeportesSeleccionados}\r\n                                                            columns={columnsDeportes} />\r\n                                                    </Col>\r\n                                                </Row>{/*Tercera Fila*/}\r\n                                            </Col>{/*Única Columna*/}\r\n                                        </Row>{/*Tercera Fila*/}\r\n                                        <br />\r\n                                        <Row>{/*Cuarta Fila*/}\r\n                                            <Col>{/*Única Columna*/}\r\n                                                <Row>{/*Primera Fila*/}\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Seleccione la imagen</label>\r\n                                                    </Col>\r\n                                                </Row>{/*Primera Fila*/}\r\n                                                <Row>{/*Segunda Fila*/}\r\n                                                    <Col>\r\n                                                        <img src={this.state.profileImg} alt=\"Imagen de Perfil\" className=\"testImage\"></img>\r\n                                                    </Col>\r\n                                                </Row>{/*Segunda Fila*/}\r\n                                                <Row>{/*Tercera Fila*/}\r\n                                                    <Col>\r\n                                                        <input type=\"file\" name=\"image-upload\" id=\"input\" accept=\"image/*\" onChange={this.imageHandler}></input>\r\n                                                    </Col>\r\n                                                </Row>{/*Tercera Fila*/}\r\n                                            </Col>{/*Única Columna*/}\r\n                                        </Row>{/*Cuarta Fila*/}\r\n                                        <br />\r\n                                        <Row>{/*Quinta Fila*/}\r\n                                            <Col>{/*Única Columna*/}\r\n                                                <Button\r\n                                                    className=\"btn-round\"\r\n                                                    color=\"primary\"\r\n                                                    onClick={this.clickRegistrar}\r\n                                                >\r\n                                                    Registrar Artículo\r\n                                                        </Button>\r\n                                            </Col>{/*Única Columna*/}\r\n                                        </Row>{/*Quinta Fila*/}\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                            <br />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default RegistrarArticulo","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\RegistrarPromocion.js",["108","109","110","111","112","113","114","115","116","117"],"import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardFooter,\r\n    CardTitle,\r\n    FormGroup,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport \"./RegistrarPromocion.css\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationfactory from 'react-bootstrap-table2-paginator';\r\n\r\nclass RegistrarPromocion extends Component {\r\n\r\n    constructor(props) {\r\n        console.log(\"Entra a RegistrarPromocion\");\r\n        super(props)\r\n        this.state = {\r\n\r\n            nombrePromocion: '',\r\n\r\n            porcentajePromocion: 0,\r\n\r\n            porcentajePromocionJson: 0,\r\n\r\n            nombreProducto: '',\r\n\r\n            descripcionPromocion: '',\r\n\r\n            fechaInitJson: '',\r\n            fechaInitDia: '',\r\n            fechaInitMes: '',\r\n            fechaInitAño: '',\r\n\r\n            fechaFinalJson: '',\r\n            fechaFinalDia: '',\r\n            fechaFinalMes: '',\r\n            fechaFinalAño: '',\r\n\r\n            firstTime: true,\r\n\r\n            jsonFile: {\r\n                name: '',\r\n                description: '',\r\n                info: {\r\n                    type: 'Descuento',\r\n                    condition: '',\r\n                },\r\n                start: '',\r\n                end: ''\r\n            },\r\n\r\n            data: { \"query\": \"NAME\", \"name\": \"Jose Montoya Salazar\" },\r\n\r\n            listaDia: [\r\n                '01', '02', '03', '04', '05', '06', '07', '08', '09', '10',\r\n                '11', '12', '13', '14', '15', '16', '17', '18', '19', '20',\r\n                '21', '22', '23', '24', '25', '26', '27', '28', '29', '30',\r\n                '31'\r\n            ],\r\n\r\n            listaMes: [\r\n                \"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\",\r\n                \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\",\r\n                \"Octubre\", \"Noviembre\", \"Diciembre\"\r\n            ]\r\n        }\r\n\r\n    }\r\n\r\n    registrarArticuloNuevo = async () => {\r\n\r\n        const url = `http://localhost:5000/add_offer?product_name=${this.state.nombreProducto}`;\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(this.state.jsonFile)\r\n        };\r\n\r\n\r\n\r\n        const response = await fetch(url, requestOptions);\r\n        if(response.status === 400){\r\n            Swal.fire(\r\n                'Error',\r\n                'El registro no se realizó de la manera correcta',\r\n                'error'\r\n            );\r\n        }else{\r\n            Swal.fire(\r\n                'Registro Exitoso',\r\n                'El registro se ha realizado de manera exitosa',\r\n                'success'\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    clickNombre = (e) => {\r\n        this.setState({\r\n            nombrePromocion: e.target.value\r\n        })\r\n    }\r\n\r\n    clickPorcentajePromocion = (e) => {\r\n        this.setState({\r\n            porcentajePromocion: Number(e.target.value)\r\n        })\r\n    }\r\n\r\n    clickNombreProducto = (e) => {\r\n        this.setState({\r\n            nombreProducto: e.target.value\r\n        })\r\n    }\r\n\r\n    clickDescripcion = (e) => {\r\n        this.setState({\r\n            descripcionPromocion: e.target.value\r\n        })\r\n    }\r\n\r\n    clickDiaFechaInit = (e) => {\r\n        this.setState({\r\n            fechaInitDia: e\r\n        })\r\n    }\r\n\r\n    clickMesFechaInit = (e) => {\r\n        this.setState({\r\n            fechaInitMes: e\r\n        })\r\n    }\r\n\r\n    clickAñoFechaInit = (e) => {\r\n        this.setState({\r\n            fechaInitAño: e.target.value\r\n        })\r\n    }\r\n\r\n    clickDiaFechaFinal = (e) => {\r\n        this.setState({\r\n            fechaFinalDia: e\r\n        })\r\n    }\r\n\r\n    clickMesFechaFinal = (e) => {\r\n        this.setState({\r\n            fechaFinalMes: e\r\n        })\r\n    }\r\n\r\n    clickAñoFechaFinal = (e) => {\r\n        this.setState({\r\n            fechaFinalAño: e.target.value\r\n        })\r\n    }\r\n\r\n    crearFechaInitJson = () => {\r\n        var tem = '';\r\n        var temMes = '';\r\n        if (this.state.fechaInitMes === \"Enero\") {\r\n            temMes = '01';\r\n        } else {\r\n            if (this.state.fechaInitMes === \"Febrero\") {\r\n                temMes = '02';\r\n            } else {\r\n                if (this.state.fechaInitMes === \"Marzo\") {\r\n                    temMes = '03';\r\n                } else {\r\n                    if (this.state.fechaInitMes === \"Abril\") {\r\n                        temMes = '04';\r\n                    } else {\r\n                        if (this.state.fechaInitMes === \"Mayo\") {\r\n                            temMes = '05';\r\n                        } else {\r\n                            if (this.state.fechaInitMes === \"Junio\") {\r\n                                temMes = '06';\r\n                            } else {\r\n                                if (this.state.fechaInitMes === \"Julio\") {\r\n                                    temMes = '07';\r\n                                } else {\r\n                                    if (this.state.fechaInitMes === \"Agosto\") {\r\n                                        temMes = '08';\r\n                                    } else {\r\n                                        if (this.state.fechaInitMes === \"Septiembre\") {\r\n                                            temMes = '09';\r\n                                        } else {\r\n                                            if (this.state.fechaInitMes === \"Octubre\") {\r\n                                                temMes = '10';\r\n                                            } else {\r\n                                                if (this.state.fechaInitMes === \"Noviembre\") {\r\n                                                    temMes = '11';\r\n                                                } else {\r\n                                                    if (this.state.fechaInitMes === \"Diciembre\") {\r\n                                                        temMes = '12';\r\n                                                    }\r\n                                                }\r\n                                            }\r\n\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.setState({\r\n            fechaInitJson: this.state.fechaInitAño + temMes + this.state.fechaInitDia\r\n        })\r\n    }\r\n\r\n    crearFechaFinalJson = () => {\r\n        var tem = '';\r\n        var temMes = '';\r\n        if (this.state.fechaFinalMes === \"Enero\") {\r\n            temMes = '01';\r\n        } else {\r\n            if (this.state.fechaFinalMes === \"Febrero\") {\r\n                temMes = '02';\r\n            } else {\r\n                if (this.state.fechaFinalMes === \"Marzo\") {\r\n                    temMes = '03';\r\n                } else {\r\n                    if (this.state.fechaFinalMes === \"Abril\") {\r\n                        temMes = '04';\r\n                    } else {\r\n                        if (this.state.fechaFinalMes === \"Mayo\") {\r\n                            temMes = '05';\r\n                        } else {\r\n                            if (this.state.fechaFinalMes === \"Junio\") {\r\n                                temMes = '06';\r\n                            } else {\r\n                                if (this.state.fechaFinalMes === \"Julio\") {\r\n                                    temMes = '07';\r\n                                } else {\r\n                                    if (this.state.fechaFinalMes === \"Agosto\") {\r\n                                        temMes = '08';\r\n                                    } else {\r\n                                        if (this.state.fechaFinalMes === \"Septiembre\") {\r\n                                            temMes = '09';\r\n                                        } else {\r\n                                            if (this.state.fechaFinalMes === \"Octubre\") {\r\n                                                temMes = '10';\r\n                                            } else {\r\n                                                if (this.state.fechaFinalMes === \"Noviembre\") {\r\n                                                    temMes = '11';\r\n                                                } else {\r\n                                                    if (this.state.fechaFinalMes === \"Diciembre\") {\r\n                                                        temMes = '12';\r\n                                                    }\r\n                                                }\r\n                                            }\r\n\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        tem = this.state.fechaFinalAño + temMes + this.state.fechaFinalDia;\r\n        this.setState({\r\n            fechaFinalJson: tem\r\n        })\r\n    }\r\n\r\n\r\n    createJsonFile = () => {\r\n        var temp = this.state.porcentajePromocion / 100;\r\n        this.state.jsonFile.name = this.state.nombrePromocion;\r\n        this.state.jsonFile.description = this.state.descripcionPromocion;\r\n        this.state.jsonFile.info.condition = temp;\r\n        this.state.jsonFile.start = this.state.fechaInitJson;\r\n        this.state.jsonFile.end = this.state.fechaFinalJson;\r\n\r\n        this.registrarArticuloNuevo();\r\n    }\r\n\r\n    clickRegistrarPromocion = () => {\r\n        this.crearFechaInitJson();\r\n        this.crearFechaFinalJson();\r\n        if (this.state.fechaInitJson === \"\") {\r\n            if (this.state.fechaFinalJson === \"\") {\r\n                if (this.state.nombrePromocion === \"\") {\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'Por favor indique el nombre de la promoción',\r\n                        'error'\r\n                    );\r\n                } else {\r\n                    if (this.state.porcentajePromocion === 0) {\r\n                        Swal.fire(\r\n                            'Error',\r\n                            'Por favor indique el porcentaje de la promoción',\r\n                            'error'\r\n                        );\r\n                    } else {\r\n                        if (this.state.descripcionPromocion === '') {\r\n                            Swal.fire(\r\n                                'Error',\r\n                                'Por favor indique la descripción de la promocion',\r\n                                'error'\r\n                            );\r\n                        } else {\r\n                            if (this.state.nombreProducto === '') {\r\n                                Swal.fire(\r\n                                    'Error',\r\n                                    'Por favor indique el nombre del producto que se le va a asignar la promoción',\r\n                                    'error'\r\n                                );\r\n                            } else {\r\n\r\n                                const swalWithBootstrapButtons = Swal.mixin({\r\n                                    customClass: {\r\n                                        confirmButton: 'btn btn-success',\r\n                                        cancelButton: 'btn btn-danger'\r\n                                    },\r\n                                    buttonsStyling: false\r\n                                })\r\n\r\n                                swalWithBootstrapButtons.fire({\r\n                                    title: 'Confirmar registro',\r\n                                    text: \"Desea registrar esta promoción?\",\r\n                                    icon: 'warning',\r\n                                    showCancelButton: true,\r\n                                    confirmButtonText: 'Si, deseo registrar',\r\n                                    cancelButtonText: 'No',\r\n                                    reverseButtons: true\r\n                                }).then((result) => {\r\n                                    if (result.isConfirmed) {\r\n                                        this.crearConsultaFinal();\r\n                                    } else if (\r\n                                        /* Read more about handling dismissals below */\r\n                                        result.dismiss === Swal.DismissReason.cancel\r\n                                    ) {\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    crearConsultaFinal = () => {\r\n        this.crearFechaInitJson();\r\n        this.crearFechaFinalJson();\r\n        this.createJsonFile();\r\n    }\r\n\r\n    render() {\r\n        localStorage.clear();\r\n\r\n        return (\r\n\r\n            <div className='RegistrarPromocion'>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className='m-auto'>\r\n\r\n                    <Navbar.Brand className=\"m-auto\">Bienvenid@</Navbar.Brand>\r\n\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n                        <Nav className=\"m-auto\">\r\n                            <Nav.Link href=\"./RegistrarArticulo\">Registrar Artículo</Nav.Link>\r\n                            <Nav.Link href=\"./RegistrarPromocion\">Registrar Promoción</Nav.Link>\r\n                            <Nav.Link href=\"./RegistarRegalia\">Registrar Regalía</Nav.Link>\r\n                            <Nav.Link href=\"./SelectAdmin\">Salir</Nav.Link>\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <br />\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1>Agregar Promoción</h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row>\r\n                        <Col>\r\n                            <Card className=\"card-user\">\r\n                                <CardHeader>\r\n                                    <CardTitle tag=\"h3\">Agregar una promoción a un artículo</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form>\r\n                                        <Row>{/*Primera Fila*/}\r\n                                            <Col>{/*Primera Columna*/}\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Nombre de la promoción</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Input\r\n                                                            placeholder=\"Nombre\"\r\n                                                            type=\"text\"\r\n                                                            onSelect={this.clickNombre}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>{/*Primera Columna*/}\r\n                                            <Col>{/*Segunda Columna*/}\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Porcentaje</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Input placeholder=\"Porcentaje\" type=\"number\" onChange={this.clickPorcentajePromocion} />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>{/*Segunda Columna*/}\r\n                                            <Col>{/*Tercera Columna*/}\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Nombre del producto al que aplica</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Input\r\n                                                            placeholder=\"Nombre\"\r\n                                                            type=\"text\"\r\n                                                            onSelect={this.clickNombreProducto}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>{/*Tercera Columna*/}\r\n                                        </Row>{/*Primera Fila*/}\r\n                                        <br />\r\n                                        <Row>{/*Segunda Fila*/}\r\n                                            <Col>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Descripción de la Promoción</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Form.Control as=\"textarea\" rows={3} onSelect={this.clickDescripcion} />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>{/*Segunda Fila*/}\r\n                                        <br />\r\n                                        <Row>{/*Tercera Fila*/}\r\n                                            <Col>\r\n                                                <label className=\"labelSetting\">Fechas</label>\r\n                                            </Col>\r\n                                        </Row>{/*Tercera Fila*/}\r\n                                        <br />\r\n                                        <Row>{/*Cuarta Fila*/}\r\n                                            <Col>{/*Primera Columna*/}\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Fecha de inicio</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>{/*Día*/}\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Día</label>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <DropdownButton\r\n                                                                    as={ButtonGroup}\r\n                                                                    title={\"Día\"}\r\n                                                                    className='scrollDelDrop'\r\n                                                                    onSelect={this.clickDiaFechaInit}\r\n                                                                >\r\n                                                                    {this.state.listaDia.map((dia) => (\r\n                                                                        <Dropdown.Item eventKey={dia}>{dia}</Dropdown.Item>\r\n                                                                    ))}\r\n                                                                </DropdownButton>\r\n                                                                <p>{this.state.fechaInitDia}</p>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>{/*Día*/}\r\n                                                    <Col>{/*Mes*/}\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Mes</label>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <DropdownButton\r\n                                                                    as={ButtonGroup}\r\n                                                                    title={\"Mes\"}\r\n                                                                    className='scrollDelDrop'\r\n                                                                    onSelect={this.clickMesFechaInit}\r\n                                                                >\r\n                                                                    {this.state.listaMes.map((mes) => (\r\n                                                                        <Dropdown.Item eventKey={mes}>{mes}</Dropdown.Item>\r\n                                                                    ))}\r\n                                                                </DropdownButton>\r\n                                                                <p>{this.state.fechaInitMes}</p>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>{/*Mes*/}\r\n                                                    <Col>{/*Mes*/}\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Año</label>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <Input placeholder=\"Año\" type=\"number\" onChange={this.clickAñoFechaInit} />\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>{/*Mes*/}\r\n                                                </Row>\r\n                                            </Col>{/*Primera Columna*/}\r\n                                            <Col>{/*Segunda Columna*/}\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Fecha Final</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>{/*Día*/}\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Día</label>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <DropdownButton\r\n                                                                    as={ButtonGroup}\r\n                                                                    title={\"Día\"}\r\n                                                                    className='scrollDelDrop'\r\n                                                                    onSelect={this.clickDiaFechaFinal}\r\n                                                                >\r\n                                                                    {this.state.listaDia.map((dia) => (\r\n                                                                        <Dropdown.Item eventKey={dia}>{dia}</Dropdown.Item>\r\n                                                                    ))}\r\n                                                                </DropdownButton>\r\n                                                                <p>{this.state.fechaFinalDia}</p>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>{/*Día*/}\r\n                                                    <Col>{/*Mes*/}\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Mes</label>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <DropdownButton\r\n                                                                    as={ButtonGroup}\r\n                                                                    title={\"Mes\"}\r\n                                                                    className='scrollDelDrop'\r\n                                                                    onSelect={this.clickMesFechaFinal}\r\n                                                                >\r\n                                                                    {this.state.listaMes.map((mes) => (\r\n                                                                        <Dropdown.Item eventKey={mes}>{mes}</Dropdown.Item>\r\n                                                                    ))}\r\n                                                                </DropdownButton>\r\n                                                                <p>{this.state.fechaFinalMes}</p>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>{/*Mes*/}\r\n                                                    <Col>{/*Mes*/}\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Año</label>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <Input placeholder=\"Año\" type=\"number\" onChange={this.clickAñoFechaFinal} />\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>{/*Mes*/}\r\n                                                </Row>\r\n                                            </Col>{/*Segunda Columna*/}\r\n                                        </Row>{/*Cuarta Fila*/}\r\n                                        <br />\r\n                                        <Row>{/*Quinta Fila*/}\r\n                                            <Col>\r\n                                                <Button\r\n                                                    className=\"btn-round\"\r\n                                                    color=\"primary\"\r\n                                                    onClick={this.clickRegistrarPromocion}\r\n                                                >\r\n                                                    Registrar Promoción\r\n                                                        </Button>\r\n                                            </Col>\r\n                                        </Row>{/*Quinta Fila*/}\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default RegistrarPromocion","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\VistaArticulos.js",["118","119","120"],"import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport './VistaArticulos.css';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationfactory from 'react-bootstrap-table2-paginator';\r\n\r\nclass VistaArticulos extends Component {\r\n\r\n    constructor(props) {\r\n        console.log(\"entra a VistaArticulos\");\r\n        super(props)\r\n        this.state = {\r\n            tableData: []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = async (e) => {\r\n        fetch(`http://localhost:5000/count_sales`).catch(err => alert(err))\r\n            .then(response => response.json())\r\n            .then(response => this.listData(response))\r\n            .catch(err => this.errorHandler(err))\r\n    }\r\n\r\n    listData = (e) => {\r\n        this.setState({\r\n            tableData: e\r\n        })\r\n    }\r\n\r\n    render() {\r\n        localStorage.clear();\r\n        const columns = [\r\n            { dataField: 'name', text: 'Nombre del Producto' },\r\n            { dataField: 'products', text: 'Cantidad total de unidades vendidas' }\r\n        ];\r\n        return (\r\n            <div className='VistaArticulos'>\r\n\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className='m-auto'>\r\n\r\n                    <Navbar.Brand className=\"m-auto\">Bienvenid@</Navbar.Brand>\r\n\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n                        <Nav className=\"m-auto\">\r\n                            <Nav.Link href=\"./HistorialCliente\">Historial del Cliente</Nav.Link>\r\n                            <Nav.Link href=\"./VistaArticulos\">Productos Adquiridos</Nav.Link>\r\n                            <Nav.Link href=\"./BusquedaArticulo\">Búsqueda Artículo</Nav.Link>\r\n                            <Nav.Link href=\"./BusquedaClientexProducto\">Búsqueda Cliente por Producto</Nav.Link>\r\n                            <Nav.Link href=\"./SelectAdmin\">Salir</Nav.Link>\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <Jumbotron className=\"jumbotronSetting\">\r\n                    <h1>Productos Adquiridos</h1>\r\n                    <p>\r\n                        Ver todos los productos adquiridos. Se debe mostrar el nombre del\r\n                        artículo y la cantidad total de unidades vendidas para cada artículo.\r\n                    </p>\r\n                </Jumbotron>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card className=\"card-user\">\r\n                                <CardHeader>\r\n                                    <CardTitle tag=\"h3\">Productos Adquiridos</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <BootstrapTable\r\n                                                    keyField=\"dia\"\r\n                                                    data={this.state.tableData}\r\n                                                    columns={columns}\r\n                                                    pagination={paginationfactory()} />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VistaArticulos","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\HistorialCliente.js",["121","122","123","124"],"import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport './HistorialCliente.css';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationfactory from 'react-bootstrap-table2-paginator';\r\n\r\nclass HistorialCliente extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: { \"query\": \"NAME\", \"name\": \"Jose Montoya Salazar\" },\r\n            dataTest: { \"query\": \"\", \"name\": \"\" },\r\n            historial: null,\r\n            tableData: [],\r\n            usernameFlag: false,\r\n            clientNamFlag: false,\r\n            clientName: ''\r\n        }\r\n\r\n    }\r\n\r\n    clickRealizarBusqueda = () => {\r\n        if (this.state.usernameFlag) {\r\n            this.state.data.query = \"USERNAME\";\r\n            this.state.data.name = this.state.clientName;\r\n            this.busquedaResultadosUsername();\r\n        } else {\r\n            if (this.state.clientNamFlag) {\r\n                this.state.data.query = \"NAME\";\r\n                this.state.data.name = this.state.clientName;\r\n                this.busquedaResultadosName();\r\n            }\r\n        }\r\n    }\r\n\r\n    busquedaResultadosName = async () => {\r\n\r\n        const url = `http://localhost:5000/client_history`;\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(this.state.data)\r\n        };\r\n\r\n\r\n\r\n        const response = await fetch(url, requestOptions);\r\n        if(response.status === 404){\r\n            Swal.fire(\r\n                'Error',\r\n                'Ese nombre no existe, por favor elegir un cliente existente',\r\n                'error'\r\n            );\r\n        }else{\r\n            const dataImprimir = await response.json();\r\n            this.testDatos(dataImprimir);\r\n        }\r\n\r\n    }\r\n\r\n    busquedaResultadosUsername = async () => {\r\n\r\n        const url = `http://localhost:5000/client_history`;\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(this.state.data)\r\n        };\r\n\r\n        const response = await fetch(url, requestOptions);\r\n        if(response.status === 404){\r\n            Swal.fire(\r\n                'Error',\r\n                'Ese Username no existe, por favor elegir un cliente existente',\r\n                'error'\r\n            );\r\n        }else{\r\n            const dataImprimir = await response.json();\r\n            this.testDatos(dataImprimir);\r\n        }\r\n\r\n    }\r\n\r\n    testDatos = (e) => {\r\n        this.setState({\r\n            historial: e\r\n        })\r\n\r\n        var temp = [];\r\n\r\n        var contador = 1;\r\n\r\n        for (let i = 0; i < 50; i++) {\r\n\r\n            if (this.state.historial[i] === undefined) {\r\n            } else {\r\n\r\n                for (let t = 0; t < this.state.historial[i].products.length; t++) {\r\n\r\n                    temp.push({\r\n                        'id': contador,\r\n                        'dia': this.state.historial[i].date,\r\n                        'precio': this.state.historial[i].cost,\r\n                        'nombre': this.state.historial[i].products[t].name,\r\n                        'cantidad': this.state.historial[i].products[t].amount\r\n                    });\r\n                }\r\n                contador = contador + 1;\r\n\r\n            }\r\n\r\n        }\r\n        this.actualizarTableData(temp);\r\n    }\r\n\r\n    clickBuscarHistorial = () => {\r\n        if (this.state.clientNamFlag) {\r\n            if (this.state.usernameFlag) {\r\n                Swal.fire(\r\n                    'Error',\r\n                    'Por favor solo elegir un tipo de nombre del cliente',\r\n                    'error'\r\n                );\r\n            } else {\r\n                if (this.state.clientName === '') {\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'Por favor escribir el nombre del Cliente',\r\n                        'error'\r\n                    );\r\n                } else {\r\n                    this.clickRealizarBusqueda();\r\n                }\r\n            }\r\n        } else {\r\n            if (this.state.usernameFlag === false) {\r\n                Swal.fire(\r\n                    'Error',\r\n                    'Por favor elegir un tipo de Cliente',\r\n                    'error'\r\n                );\r\n            }\r\n            else {\r\n                if (this.state.clientName === '') {\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'Por favor escribir el nombre del Cliente',\r\n                        'error'\r\n                    );\r\n                } else {\r\n                    this.clickRealizarBusqueda();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    clickNombre = (e) => {\r\n        this.setState({\r\n            clientName: e.target.value\r\n        })\r\n    }\r\n\r\n    clickTipoClienteNombre = () => {\r\n        if (this.state.clientNamFlag) {\r\n            this.setState({\r\n                clientNamFlag: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                clientNamFlag: true\r\n            })\r\n        }\r\n    }\r\n\r\n    clickTipoClienteUsername = () => {\r\n        if (this.state.usernameFlag) {\r\n            this.setState({\r\n                usernameFlag: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                usernameFlag: true\r\n            })\r\n        }\r\n    }\r\n\r\n    actualizarTableData(e) {\r\n        this.setState({\r\n            tableData: e\r\n        })\r\n\r\n        Swal.fire(\r\n            'Búsqueda Exitoso',\r\n            'La búsqueda se ha realizado de manera exitosa',\r\n            'success'\r\n        );\r\n    }\r\n\r\n    render() {\r\n        localStorage.clear();\r\n        const columnsHistorial = [\r\n            { dataField: 'id', text: 'ID de la compra' },\r\n            { dataField: 'dia', text: 'Fecha de la Compra' },\r\n            { dataField: 'precio', text: 'Precio total de la compra' },\r\n            { dataField: 'nombre', text: 'Nombre del Producto' },\r\n            { dataField: 'cantidad', text: 'Cantidad Comprada' }\r\n        ];\r\n        return (\r\n            <div className='HistorialCliente'>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className='m-auto'>\r\n\r\n                    <Navbar.Brand className=\"m-auto\">Bienvenid@</Navbar.Brand>\r\n\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n                        <Nav className=\"m-auto\">\r\n                            <Nav.Link href=\"./HistorialCliente\">Historial del Cliente</Nav.Link>\r\n                            <Nav.Link href=\"./VistaArticulos\">Productos Adquiridos</Nav.Link>\r\n                            <Nav.Link href=\"./BusquedaArticulo\">Búsqueda Artículo</Nav.Link>\r\n                            <Nav.Link href=\"./BusquedaClientexProducto\">Búsqueda Cliente por Producto</Nav.Link>\r\n                            <Nav.Link href=\"./SelectAdmin\">Salir</Nav.Link>\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <Jumbotron className=\"jumbotronSetting\">\r\n                    <h1>Historial del Cliente</h1>\r\n                    <p>\r\n                        Buscar un cliente en particular (dado su nombre o su usuario) y mostrar\r\n                        todo su historial de compras\r\n                    </p>\r\n                </Jumbotron>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card className=\"card-user\">\r\n                                <CardHeader>\r\n                                    <CardTitle tag=\"h3\">Historial del Cliente</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <label className=\"labelSetting\">Escribir el nombre del cliente</label>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Input\r\n                                                    placeholder=\"Nombre\"\r\n                                                    type=\"text\"\r\n                                                    className=\"inputName\"\r\n                                                    onChange={this.clickNombre}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <label className=\"labelSetting\">Escoger el tipo del nombre del cliente</label>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Form.Check type=\"checkbox\" label=\"Nombre\" onClick={this.clickTipoClienteNombre} />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Form.Check type=\"checkbox\" label=\"UserName\" onClick={this.clickTipoClienteUsername} />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Button\r\n                                                    className=\"btn-round\"\r\n                                                    color=\"primary\"\r\n                                                    onClick={this.clickBuscarHistorial}\r\n                                                >\r\n                                                    Buscar Historial\r\n                                                        </Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <BootstrapTable\r\n                                                    keyField=\"dia\"\r\n                                                    data={this.state.tableData}\r\n                                                    columns={columnsHistorial}\r\n                                                    pagination={paginationfactory()} />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n                <br />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistorialCliente","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\SelectAdmin.js",[],"C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\BusquedaClientexProducto.js",["125"],"C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\TestImage.js",["126"],"import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport \"./App.css\"\r\n\r\nclass TestImage extends Component {\r\n    constructor(props) {\r\n        console.log(\"Entra a TestImage\");\r\n        super(props)\r\n        this.state = {\r\n            profileImg: 'https://cdn.pixabay.com/photo/2017/06/13/12/53/profile-2398782_1280.png'\r\n        }\r\n    }\r\n\r\n    imageHandler = (e) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                this.setState({\r\n                    profileImg: reader.result\r\n                })\r\n                console.log(reader.result);\r\n            }\r\n        }\r\n        reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n\r\n    convertBase64Image = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const filereader = new FileReader();\r\n            filereader.readAsDataURL(file);\r\n\r\n            filereader.onload = () => {\r\n                resolve(filereader.result)\r\n            }\r\n\r\n            filereader.onerror = (error) => {\r\n                reject(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='page'>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={6} md={4}>\r\n                            <h1>Add your Image</h1>\r\n                            <br />\r\n                            <img src={this.state.profileImg} alt=\"Imagen de Perfil\" className=\"testImage\"></img>\r\n                            <input type=\"file\" name=\"image-upload\" id=\"input\" accept=\"image/*\" onChange={this.imageHandler}></input>\r\n                            <label htmlFor=\"input\" className=\"image-upload\"></label>\r\n                            <i className=\"material-icons\">add_photo_alternate</i>\r\n                            Choose your Photo\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default TestImage","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\RegistrarRegalia.js",["127","128","129","130","131","132","133","134","135","136"],"C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\RegisterPageClient.js",["137","138","139","140","141","142","143","144","145"],"import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport './RegisterPageClient.css';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationfactory from 'react-bootstrap-table2-paginator';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass RegisterPageClient extends Component {\r\n\r\n    constructor(props) {\r\n        console.log(\"entra a RegisterPageClient\");\r\n        super(props)\r\n        this.state = {\r\n            tableData: [],\r\n            selectFlag: false,\r\n            nombreCliente: '',\r\n            apellidoCliente: '',\r\n            nombreCompleto: '',\r\n            fechaNacimiento: '',\r\n            diaS: '',\r\n            mesS: '',\r\n            añoS: '',\r\n            generoCliente: '',\r\n            mujerFlag: false,\r\n            hombreFlag: false,\r\n            indefinidoFlag: false,\r\n            usernameCliente: '',\r\n            passwordCliente: '',\r\n            jsonFile: {\r\n                username: '',\r\n                password: '',\r\n                name: '',\r\n                birthday: '',\r\n                gender: ''\r\n            },\r\n            entraP: false,\r\n            listaDia: [\r\n                '01', '02', '03', '04', '05', '06', '07', '08', '09', '10',\r\n                '11', '12', '13', '14', '15', '16', '17', '18', '19', '20',\r\n                '21', '22', '23', '24', '25', '26', '27', '28', '29', '30',\r\n                '31'\r\n            ],\r\n\r\n            listaMes: [\r\n                \"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\",\r\n                \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\",\r\n                \"Octubre\", \"Noviembre\", \"Diciembre\"\r\n            ]\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    registrarClienteNuevo = async () => {\r\n\r\n        const url = `http://localhost:5000/register_client`;\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(this.state.jsonFile)\r\n        };\r\n\r\n\r\n\r\n        const response = await fetch(url, requestOptions);\r\n        if(response.status === 409){\r\n            Swal.fire(\r\n                'Error',\r\n                'El Cliente ya existe por favor ingrese un nuevo cliente',\r\n                'error'\r\n            );\r\n        }else{\r\n            if(response.status === 404){\r\n                Swal.fire(\r\n                    'Error',\r\n                    'Hubo un error al ingresar un cliente nuevo, por favor intente más tarde',\r\n                    'error'\r\n                );\r\n            }else{\r\n                Swal.fire(\r\n                    'Registro Exitoso',\r\n                    'El registro se ha realizado de manera exitosa',\r\n                    'success'\r\n                );\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.selectFlag) {\r\n            return <Redirect to='/' />\r\n        }\r\n    }\r\n\r\n    clickPresionado = (event) => {\r\n        this.setState({\r\n            selectFlag: true\r\n        })\r\n    }\r\n\r\n    clickName = (e) => {\r\n        this.setState({\r\n            nombreCliente: e.target.value\r\n        })\r\n    }\r\n\r\n    clickApellidos = (e) => {\r\n        this.setState({\r\n            apellidoCliente: e.target.value\r\n        })\r\n    }\r\n\r\n    ActualizarNombreCompleto = () => {\r\n        this.setState({\r\n            nombreCompleto: this.state.nombreCliente + this.state.apellidoCliente\r\n        })\r\n    }\r\n\r\n    clickMujerCheck = () => {\r\n        if (this.state.mujerFlag) {\r\n            this.setState({\r\n                mujerFlag: false,\r\n                generoCliente: ''\r\n            })\r\n        } else {\r\n            this.setState({\r\n                mujerFlag: true,\r\n                generoCliente: 'F'\r\n            })\r\n        }\r\n    }\r\n\r\n    clickHombreCheck = () => {\r\n        if (this.state.hombreFlag) {\r\n            this.setState({\r\n                hombreFlag: false,\r\n                generoCliente: ''\r\n            })\r\n        } else {\r\n            this.setState({\r\n                hombreFlag: true,\r\n                generoCliente: 'M'\r\n            })\r\n        }\r\n    }\r\n\r\n    clickIndefinidoCheck = () => {\r\n        if (this.state.indefinidoFlag) {\r\n            this.setState({\r\n                indefinidoFlag: false,\r\n                generoCliente: ''\r\n            })\r\n        } else {\r\n            this.setState({\r\n                indefinidoFlag: true,\r\n                generoCliente: 'I'\r\n            })\r\n        }\r\n    }\r\n\r\n    clickUsername = (e) => {\r\n        this.setState({\r\n            usernameCliente: e.target.value\r\n        })\r\n    }\r\n\r\n    clickPassword = (e) => {\r\n        this.setState({\r\n            passwordCliente: e.target.value\r\n        })\r\n    }\r\n\r\n    clickDia = (e) => {\r\n        this.setState({\r\n            diaS: e\r\n        })\r\n    }\r\n\r\n    clickMes = (e) => {\r\n        var temp = '01';\r\n        if(e === \"Enero\"){\r\n            temp = '01';\r\n            this.setState({\r\n                mesS: temp\r\n            })\r\n        }else{\r\n            if(e === \"Febrero\"){\r\n                temp = '02';\r\n                this.setState({\r\n                    mesS: temp\r\n                })\r\n            }else{\r\n                if(e === \"Marzo\"){\r\n                    temp = '03';\r\n                    this.setState({\r\n                        mesS: temp\r\n                    })\r\n                }else{\r\n                    if(e === \"Abril\"){\r\n                        temp = '04';\r\n                        this.setState({\r\n                            mesS: temp\r\n                        })\r\n                    }else{\r\n                        if(e === \"Mayo\"){\r\n                            temp = '05';\r\n                            this.setState({\r\n                                mesS: temp\r\n                            })\r\n                        }else{\r\n                            if(e === \"Junio\"){\r\n                                temp = '06';\r\n                                this.setState({\r\n                                    mesS: temp\r\n                                })\r\n                            }else{\r\n                                if(e === \"Julio\"){\r\n                                    temp = '07';\r\n                                    this.setState({\r\n                                        mesS: temp\r\n                                    })\r\n                                }else{\r\n                                    if(e === \"Agosto\"){\r\n                                        temp = '08';\r\n                                        this.setState({\r\n                                            mesS: temp\r\n                                        })\r\n                                    }else{\r\n                                        if(e === \"Septiembre\"){\r\n                                            temp = '09';\r\n                                            this.setState({\r\n                                                mesS: temp\r\n                                            })\r\n                                        }else{\r\n                                            if(e === \"Octubre\"){\r\n                                                temp = '10';\r\n                                                this.setState({\r\n                                                    mesS: temp\r\n                                                })\r\n                                            }else{\r\n                                                if(e === \"Noviembre\"){\r\n                                                    temp = '11';\r\n                                                    this.setState({\r\n                                                        mesS: temp\r\n                                                    })\r\n                                                }else{\r\n                                                    temp = '12';\r\n                                                    this.setState({\r\n                                                        mesS: temp\r\n                                                    })                                                    \r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    clickAño = (e) => {\r\n        this.setState({\r\n            añoS: e.target.value\r\n        })\r\n    }\r\n\r\n    ActualizarFechaCumpleaños = () => {\r\n        this.setState({\r\n            fechaNacimiento: this.state.añoS + this.state.mesS + this.state.diaS\r\n        })\r\n    }\r\n\r\n    llamadaApi = () => {\r\n        console.log();\r\n        console.log(\"Entra a llamadaApi\");\r\n        console.log();\r\n        console.log(this.state.jsonFile);\r\n        this.registrarClienteNuevo();\r\n    }\r\n\r\n    createJsonFile = () => {\r\n        this.state.jsonFile.name = this.state.nombreCompleto;\r\n        this.state.jsonFile.username = this.state.usernameCliente;\r\n        this.state.jsonFile.password = this.state.passwordCliente;\r\n        this.state.jsonFile.birthday = this.state.fechaNacimiento;\r\n        this.state.jsonFile.gender = this.state.generoCliente;\r\n    }\r\n\r\n    ActualizarCumpleYNombre = () => {\r\n        this.ActualizarFechaCumpleaños();\r\n        this.ActualizarNombreCompleto();\r\n        if (this.state.entraP) {\r\n            this.createJsonFile();\r\n        } else {\r\n            this.setState({\r\n                entraP: true\r\n            })\r\n        }\r\n    }\r\n\r\n    clickRegistrarCliente = () => {\r\n        if (this.state.entraP) {\r\n            if (this.state.nombreCliente === '') {\r\n                Swal.fire(\r\n                    'Error',\r\n                    'Por favor escriba su nombre',\r\n                    'error'\r\n                );\r\n            } else {\r\n                if (this.state.apellidoCliente === '') {\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'Por favor escriba sus apellidos',\r\n                        'error'\r\n                    );\r\n                } else {\r\n                    if (this.state.diaS === '') {\r\n                        Swal.fire(\r\n                            'Error',\r\n                            'Por favor seleccione el día en que nació',\r\n                            'error'\r\n                        );\r\n                    } else {\r\n                        if (this.state.mesS === '') {\r\n                            Swal.fire(\r\n                                'Error',\r\n                                'Por favor seleccione el mes en que nació',\r\n                                'error'\r\n                            );\r\n                        } else {\r\n                            if (this.state.añoS === '') {\r\n                                Swal.fire(\r\n                                    'Error',\r\n                                    'Por favor escriba el año en que nació',\r\n                                    'error'\r\n                                );\r\n                            } else {\r\n                                if (this.state.usernameCliente === '') {\r\n                                    Swal.fire(\r\n                                        'Error',\r\n                                        'Por favor escriba su nombre de usuario',\r\n                                        'error'\r\n                                    );\r\n                                } else {\r\n                                    if (this.state.passwordCliente === '') {\r\n                                        Swal.fire(\r\n                                            'Error',\r\n                                            'Por favor escriba su contraseña',\r\n                                            'error'\r\n                                        );\r\n                                    } else {\r\n                                        if (this.state.mujerFlag) {\r\n                                            if (this.state.hombreFlag) {\r\n                                                if (this.state.indefinidoFlag) {\r\n                                                    Swal.fire(\r\n                                                        'Error',\r\n                                                        'Por favor solo elegir un género',\r\n                                                        'error'\r\n                                                    );\r\n                                                } else {\r\n                                                    Swal.fire(\r\n                                                        'Error',\r\n                                                        'Por favor solo elegir un género',\r\n                                                        'error'\r\n                                                    );\r\n                                                }\r\n                                            } else {\r\n                                                if (this.state.indefinidoFlag) {\r\n                                                    Swal.fire(\r\n                                                        'Error',\r\n                                                        'Por favor solo elegir un género',\r\n                                                        'error'\r\n                                                    );\r\n                                                } else {\r\n                                                    this.ActualizarCumpleYNombre();\r\n                                                    const swalWithBootstrapButtons = Swal.mixin({\r\n                                                        customClass: {\r\n                                                            confirmButton: 'btn btn-success',\r\n                                                            cancelButton: 'btn btn-danger'\r\n                                                        },\r\n                                                        buttonsStyling: false\r\n                                                    })\r\n\r\n                                                    swalWithBootstrapButtons.fire({\r\n                                                        title: 'Confirmar registro',\r\n                                                        text: \"Desea registrar esta promoción?\",\r\n                                                        icon: 'warning',\r\n                                                        showCancelButton: true,\r\n                                                        confirmButtonText: 'Si, deseo registrar',\r\n                                                        cancelButtonText: 'No',\r\n                                                        reverseButtons: true\r\n                                                    }).then((result) => {\r\n                                                        if (result.isConfirmed) {\r\n                                                            this.ActualizarCumpleYNombre();\r\n                                                            this.llamadaApi();\r\n                                                        } else if (\r\n                                                            /* Read more about handling dismissals below */\r\n                                                            result.dismiss === Swal.DismissReason.cancel\r\n                                                        ) {\r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                            }\r\n                                        } else {\r\n                                            if (this.state.hombreFlag) {\r\n                                                if (this.state.indefinidoFlag) {\r\n                                                    Swal.fire(\r\n                                                        'Error',\r\n                                                        'Por favor solo elegir un género',\r\n                                                        'error'\r\n                                                    );\r\n                                                } else {\r\n                                                    this.ActualizarCumpleYNombre();\r\n                                                    const swalWithBootstrapButtons = Swal.mixin({\r\n                                                        customClass: {\r\n                                                            confirmButton: 'btn btn-success',\r\n                                                            cancelButton: 'btn btn-danger'\r\n                                                        },\r\n                                                        buttonsStyling: false\r\n                                                    })\r\n\r\n                                                    swalWithBootstrapButtons.fire({\r\n                                                        title: 'Confirmar registro',\r\n                                                        text: \"Desea registrar esta promoción?\",\r\n                                                        icon: 'warning',\r\n                                                        showCancelButton: true,\r\n                                                        confirmButtonText: 'Si, deseo registrar',\r\n                                                        cancelButtonText: 'No',\r\n                                                        reverseButtons: true\r\n                                                    }).then((result) => {\r\n                                                        if (result.isConfirmed) {\r\n                                                            this.ActualizarCumpleYNombre();\r\n                                                            this.llamadaApi();\r\n                                                        } else if (\r\n                                                            /* Read more about handling dismissals below */\r\n                                                            result.dismiss === Swal.DismissReason.cancel\r\n                                                        ) {\r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                            } else {\r\n                                                if (this.state.indefinidoFlag) {\r\n                                                    this.ActualizarCumpleYNombre();\r\n                                                    const swalWithBootstrapButtons = Swal.mixin({\r\n                                                        customClass: {\r\n                                                            confirmButton: 'btn btn-success',\r\n                                                            cancelButton: 'btn btn-danger'\r\n                                                        },\r\n                                                        buttonsStyling: false\r\n                                                    })\r\n\r\n                                                    swalWithBootstrapButtons.fire({\r\n                                                        title: 'Confirmar registro',\r\n                                                        text: \"Desea registrar esta promoción?\",\r\n                                                        icon: 'warning',\r\n                                                        showCancelButton: true,\r\n                                                        confirmButtonText: 'Si, deseo registrar',\r\n                                                        cancelButtonText: 'No',\r\n                                                        reverseButtons: true\r\n                                                    }).then((result) => {\r\n                                                        if (result.isConfirmed) {\r\n                                                            this.ActualizarCumpleYNombre();\r\n                                                            this.llamadaApi();\r\n                                                        } else if (\r\n                                                            /* Read more about handling dismissals below */\r\n                                                            result.dismiss === Swal.DismissReason.cancel\r\n                                                        ) {\r\n                                                        }\r\n                                                    })\r\n                                                }else{\r\n                                                    Swal.fire(\r\n                                                        'Error',\r\n                                                        'Por favor elegir un género',\r\n                                                        'error'\r\n                                                    );\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (this.state.nombreCliente === '') {\r\n                Swal.fire(\r\n                    'Error',\r\n                    'Por favor escriba su nombre',\r\n                    'error'\r\n                );\r\n            } else {\r\n                if (this.state.apellidoCliente === '') {\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'Por favor escriba sus apellidos',\r\n                        'error'\r\n                    );\r\n                } else {\r\n                    if (this.state.diaS === '') {\r\n                        Swal.fire(\r\n                            'Error',\r\n                            'Por favor seleccione el día en que nació',\r\n                            'error'\r\n                        );\r\n                    } else {\r\n                        if (this.state.mesS === '') {\r\n                            Swal.fire(\r\n                                'Error',\r\n                                'Por favor seleccione el mes en que nació',\r\n                                'error'\r\n                            );\r\n                        } else {\r\n                            if (this.state.añoS === '') {\r\n                                Swal.fire(\r\n                                    'Error',\r\n                                    'Por favor escriba el año en que nació',\r\n                                    'error'\r\n                                );\r\n                            } else {\r\n                                if (this.state.usernameCliente === '') {\r\n                                    Swal.fire(\r\n                                        'Error',\r\n                                        'Por favor escriba su nombre de usuario',\r\n                                        'error'\r\n                                    );\r\n                                } else {\r\n                                    if (this.state.passwordCliente === '') {\r\n                                        Swal.fire(\r\n                                            'Error',\r\n                                            'Por favor escriba su contraseña',\r\n                                            'error'\r\n                                        );\r\n                                    } else {\r\n                                        if (this.state.mujerFlag) {\r\n                                            if (this.state.hombreFlag) {\r\n                                                if (this.state.indefinidoFlag) {\r\n                                                    Swal.fire(\r\n                                                        'Error',\r\n                                                        'Por favor solo elegir un género',\r\n                                                        'error'\r\n                                                    );\r\n                                                } else {\r\n                                                    Swal.fire(\r\n                                                        'Error',\r\n                                                        'Por favor solo elegir un género',\r\n                                                        'error'\r\n                                                    );\r\n                                                }\r\n                                            } else {\r\n                                                if (this.state.indefinidoFlag) {\r\n                                                    Swal.fire(\r\n                                                        'Error',\r\n                                                        'Por favor solo elegir un género',\r\n                                                        'error'\r\n                                                    );\r\n                                                } else {\r\n                                                    this.ActualizarCumpleYNombre();\r\n                                                    const swalWithBootstrapButtons = Swal.mixin({\r\n                                                        customClass: {\r\n                                                            confirmButton: 'btn btn-success',\r\n                                                            cancelButton: 'btn btn-danger'\r\n                                                        },\r\n                                                        buttonsStyling: false\r\n                                                    })\r\n\r\n                                                    swalWithBootstrapButtons.fire({\r\n                                                        title: 'Confirmar registro',\r\n                                                        text: \"Desea registrar esta promoción?\",\r\n                                                        icon: 'warning',\r\n                                                        showCancelButton: true,\r\n                                                        confirmButtonText: 'Si, deseo registrar',\r\n                                                        cancelButtonText: 'No',\r\n                                                        reverseButtons: true\r\n                                                    }).then((result) => {\r\n                                                        if (result.isConfirmed) {\r\n                                                            this.ActualizarCumpleYNombre();\r\n                                                            this.llamadaApi();\r\n                                                        } else if (\r\n                                                            /* Read more about handling dismissals below */\r\n                                                            result.dismiss === Swal.DismissReason.cancel\r\n                                                        ) {\r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                            }\r\n                                        } else {\r\n                                            if (this.state.hombreFlag) {\r\n                                                if (this.state.indefinidoFlag) {\r\n                                                    Swal.fire(\r\n                                                        'Error',\r\n                                                        'Por favor solo elegir un género',\r\n                                                        'error'\r\n                                                    );\r\n                                                } else {\r\n                                                    this.ActualizarCumpleYNombre();\r\n                                                    const swalWithBootstrapButtons = Swal.mixin({\r\n                                                        customClass: {\r\n                                                            confirmButton: 'btn btn-success',\r\n                                                            cancelButton: 'btn btn-danger'\r\n                                                        },\r\n                                                        buttonsStyling: false\r\n                                                    })\r\n\r\n                                                    swalWithBootstrapButtons.fire({\r\n                                                        title: 'Confirmar registro',\r\n                                                        text: \"Desea registrar esta promoción?\",\r\n                                                        icon: 'warning',\r\n                                                        showCancelButton: true,\r\n                                                        confirmButtonText: 'Si, deseo registrar',\r\n                                                        cancelButtonText: 'No',\r\n                                                        reverseButtons: true\r\n                                                    }).then((result) => {\r\n                                                        if (result.isConfirmed) {\r\n                                                            this.ActualizarCumpleYNombre();\r\n                                                            this.llamadaApi();\r\n                                                        } else if (\r\n                                                            /* Read more about handling dismissals below */\r\n                                                            result.dismiss === Swal.DismissReason.cancel\r\n                                                        ) {\r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                            } else {\r\n                                                if (this.state.indefinidoFlag) {\r\n                                                    this.ActualizarCumpleYNombre();\r\n                                                    const swalWithBootstrapButtons = Swal.mixin({\r\n                                                        customClass: {\r\n                                                            confirmButton: 'btn btn-success',\r\n                                                            cancelButton: 'btn btn-danger'\r\n                                                        },\r\n                                                        buttonsStyling: false\r\n                                                    })\r\n\r\n                                                    swalWithBootstrapButtons.fire({\r\n                                                        title: 'Confirmar registro',\r\n                                                        text: \"Desea registrar esta promoción?\",\r\n                                                        icon: 'warning',\r\n                                                        showCancelButton: true,\r\n                                                        confirmButtonText: 'Si, deseo registrar',\r\n                                                        cancelButtonText: 'No',\r\n                                                        reverseButtons: true\r\n                                                    }).then((result) => {\r\n                                                        if (result.isConfirmed) {\r\n                                                            this.ActualizarCumpleYNombre();\r\n                                                            this.llamadaApi();\r\n                                                        } else if (\r\n                                                            /* Read more about handling dismissals below */\r\n                                                            result.dismiss === Swal.DismissReason.cancel\r\n                                                        ) {\r\n                                                        }\r\n                                                    })\r\n                                                }else{\r\n                                                    Swal.fire(\r\n                                                        'Error',\r\n                                                        'Por favor elegir un género',\r\n                                                        'error'\r\n                                                    );\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        localStorage.clear();\r\n        return (\r\n            <div className='RegisterPageClient'>\r\n                {this.renderRedirect()}\r\n                <Jumbotron className=\"jumbotronSetting\">\r\n                    <h1>Registro</h1>\r\n                </Jumbotron>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card className=\"card-user\">\r\n                                <CardHeader>\r\n                                    <CardTitle tag=\"h3\">Registro del Cliente</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Nombre</label>\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Apellidos</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Input\r\n                                                            placeholder=\"Nombre\"\r\n                                                            type=\"text\"\r\n                                                            onSelect={this.clickName}\r\n                                                        />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Input\r\n                                                            placeholder=\"Apellidos\"\r\n                                                            type=\"text\"\r\n                                                            onSelect={this.clickApellidos}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Fecha de nacimiento</label>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Día</label>\r\n                                                            </Col>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Mes</label>\r\n                                                            </Col>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Año</label>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <DropdownButton\r\n                                                                    as={ButtonGroup}\r\n                                                                    title={\"Día\"}\r\n                                                                    className='scrollDelDrop'\r\n                                                                    onSelect={this.clickDia}\r\n                                                                >\r\n                                                                    {this.state.listaDia.map((dia) => (\r\n                                                                        <Dropdown.Item eventKey={dia}>{dia}</Dropdown.Item>\r\n                                                                    ))}\r\n                                                                </DropdownButton>\r\n                                                                <p>{this.state.diaS}</p>\r\n                                                            </Col>\r\n                                                            <Col>\r\n                                                                <DropdownButton\r\n                                                                    as={ButtonGroup}\r\n                                                                    title={\"Mes\"}\r\n                                                                    className='scrollDelDrop'\r\n                                                                    onSelect={this.clickMes}\r\n                                                                >\r\n                                                                    {this.state.listaMes.map((mes) => (\r\n                                                                        <Dropdown.Item eventKey={mes}>{mes}</Dropdown.Item>\r\n                                                                    ))}\r\n                                                                </DropdownButton>\r\n                                                                <p>{this.state.mesS}</p>\r\n                                                            </Col>\r\n                                                            <Col>\r\n                                                                <Input\r\n                                                                    placeholder=\"Año\"\r\n                                                                    type=\"text\"\r\n                                                                    onSelect={this.clickAño}\r\n                                                                />\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Género</label>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <Form.Check type=\"checkbox\" label=\"Mujer\" onClick={this.clickMujerCheck} />\r\n                                                            </Col>\r\n                                                            <Col>\r\n                                                                <Form.Check type=\"checkbox\" label=\"Hombre\" onClick={this.clickHombreCheck} />\r\n                                                            </Col>\r\n                                                            <Col>\r\n                                                                <Form.Check type=\"checkbox\" label=\"Indefinido\" onClick={this.clickIndefinidoCheck} />\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Nombre de usuario</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Input\r\n                                                            placeholder=\"Username\"\r\n                                                            type=\"text\"\r\n                                                            onSelect={this.clickUsername}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Contraseña</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Input\r\n                                                            placeholder=\"Contraseña\"\r\n                                                            type=\"password\"\r\n                                                            onSelect={this.clickPassword}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Button variant=\"dark\" size=\"lg\" onClick={this.clickRegistrarCliente}>Registrarme</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                            <br />\r\n                            <Row>\r\n                                <Col>\r\n                                    <Button variant=\"dark\" size=\"lg\" onClick={this.clickPresionado}>Salir</Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <br />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterPageClient","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\TestRegistroArticulo.js",["146","147","148","149","150","151","152","153","154","155","156","157","158","159"],"import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardFooter,\r\n    CardTitle,\r\n    FormGroup,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport \"./TestRegistroArticulo.css\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationfactory from 'react-bootstrap-table2-paginator';\r\n\r\nclass TestRegistroArticulo extends Component {\r\n\r\n    constructor(props) {\r\n        console.log(\"Entra a TestRegistroArticulo\");\r\n        super(props)\r\n        this.state = {\r\n\r\n            nombreArticulo: '',\r\n\r\n            itemsBrand: [],\r\n            BrandListDrop: [\r\n            ],\r\n            brandSelect: '',\r\n\r\n            precioArticulo: 0,\r\n\r\n            unidadDisponibleArticulo: 0,\r\n\r\n            itemsSport: [],\r\n            SportListDrop: [],\r\n            sportSelect: '',\r\n            listaDeportesSeleccionados: [],\r\n            listaTempDeportes: [],\r\n\r\n            itemsProduct_Type: [],\r\n            Product_TypeListDrop: [],\r\n            product_TypeSelect: '',\r\n\r\n            limitadaFlag: \"false\",\r\n            estandarFlag: \"false\",\r\n            limitArticulo: false,\r\n\r\n            profileImg: 'https://cdn.pixabay.com/photo/2017/06/13/12/53/profile-2398782_1280.png',\r\n            imageFlag: false,\r\n\r\n            jsonFile: {\r\n                name: '',\r\n                brand: '',\r\n                price: 0,\r\n                sports: [],\r\n                limit: false,\r\n                units: 0,\r\n                img: null,\r\n                type: ''\r\n            },\r\n\r\n            data: {\"query\": \"NAME\", \"name\": \"Jose Montoya Salazar\"},\r\n\r\n            listaDia: [\r\n                1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n                11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\r\n                21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31\r\n            ],\r\n\r\n            listaMes: [\r\n                \"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\",\r\n                \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\",\r\n                \"Octubre\", \"Noviembre\", \"Diciembre\"\r\n            ]\r\n        }\r\n\r\n    }\r\n\r\n    busquedaResultados = async () => {\r\n      }\r\n\r\n\r\n    createJsonFile = () => {\r\n        this.state.jsonFile.name = this.state.nombreArticulo;\r\n        this.state.jsonFile.brand = this.state.brandSelect;\r\n        this.state.jsonFile.price = this.state.precioArticulo;\r\n        this.state.jsonFile.sports = this.state.listaTempDeportes;\r\n        this.state.jsonFile.limit = this.state.limitArticulo;\r\n        this.state.jsonFile.units = this.state.unidadDisponibleArticulo;\r\n        this.state.jsonFile.img = this.state.profileImg;\r\n        this.state.jsonFile.type = this.state.product_TypeSelect;\r\n\r\n        console.log(\"El JsonFile\");\r\n        console.log(this.state.jsonFile);\r\n    }\r\n\r\n    render() {\r\n        localStorage.clear();\r\n\r\n        return (\r\n\r\n            <div className='TestRegistroArticulo'>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className='m-auto'>\r\n\r\n                    <Navbar.Brand className=\"m-auto\">Bienvenid@</Navbar.Brand>\r\n\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n                        <Nav className=\"m-auto\">\r\n                            <Nav.Link href=\"./RegistrarArticulo\">Registrar Artículo</Nav.Link>\r\n                            <Nav.Link href=\"./RegistrarPromocion\">Registrar Promoción</Nav.Link>\r\n                            <Nav.Link href=\"./RegistarRegalia\">Registrar Regalía</Nav.Link>\r\n                            <Nav.Link href=\"./SelectAdmin\">Salir</Nav.Link>\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <br />\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1>Agregar Regalía</h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row>\r\n                        <Col>\r\n                            <Card className=\"card-user\">\r\n                                <CardHeader>\r\n                                    <CardTitle tag=\"h3\">Agregar una regalía a un artículo</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form>\r\n                                        <Row>{/*Primera Fila*/}\r\n                                            <Col>{/*Primera Columna*/}\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Nombre de la regalía</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Input\r\n                                                            placeholder=\"Nombre\"\r\n                                                            type=\"text\"\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>{/*Primera Columna*/}\r\n                                            <Col>{/*Segunda Columna*/}\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Nombre del producto al que aplica</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Input\r\n                                                            placeholder=\"Nombre\"\r\n                                                            type=\"text\"\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>{/*Segunda Columna*/}\r\n                                        </Row>{/*Primera Fila*/}\r\n                                        <br />\r\n                                        <Row>{/*Segunda Fila*/}\r\n                                            <Col>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Descripción de la Promoción</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Form.Control as=\"textarea\" rows={3} />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>{/*Segunda Fila*/}\r\n                                        <br />\r\n                                        <Row>{/*Tercera Fila*/}\r\n                                            <Col>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Descripción de la Regalía</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Form.Control as=\"textarea\" rows={3} />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>{/*Tercera Fila*/}\r\n                                        <br />\r\n                                        <Row>{/*Cuarta Fila*/}\r\n                                            <Col>\r\n                                                <label className=\"labelSetting\">Fechas</label>\r\n                                            </Col>\r\n                                        </Row>{/*Cuarta Fila*/}\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col>{/*Primera Columna*/}\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Fecha de inicio</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>{/*Día*/}\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Día</label>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <DropdownButton\r\n                                                                    as={ButtonGroup}\r\n                                                                    title={\"Día\"}\r\n                                                                    className='scrollDelDrop'\r\n                                                                >\r\n                                                                    {this.state.listaDia.map((dia) => (\r\n                                                                        <Dropdown.Item eventKey={dia}>{dia}</Dropdown.Item>\r\n                                                                    ))}\r\n                                                                </DropdownButton>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>{/*Día*/}\r\n                                                    <Col>{/*Mes*/}\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Mes</label>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <DropdownButton\r\n                                                                    as={ButtonGroup}\r\n                                                                    title={\"Mes\"}\r\n                                                                    className='scrollDelDrop'\r\n                                                                >\r\n                                                                    {this.state.listaMes.map((mes) => (\r\n                                                                        <Dropdown.Item eventKey={mes}>{mes}</Dropdown.Item>\r\n                                                                    ))}\r\n                                                                </DropdownButton>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>{/*Mes*/}\r\n                                                    <Col>{/*Mes*/}\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Año</label>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <Input placeholder=\"Año\" type=\"number\" />\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>{/*Mes*/}\r\n                                                </Row>\r\n                                            </Col>{/*Primera Columna*/}\r\n                                            <Col>{/*Segunda Columna*/}\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label className=\"labelSetting\">Fecha Final</label>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>{/*Día*/}\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Día</label>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <DropdownButton\r\n                                                                    as={ButtonGroup}\r\n                                                                    title={\"Día\"}\r\n                                                                    className='scrollDelDrop'\r\n                                                                >\r\n                                                                    {this.state.listaDia.map((dia) => (\r\n                                                                        <Dropdown.Item eventKey={dia}>{dia}</Dropdown.Item>\r\n                                                                    ))}\r\n                                                                </DropdownButton>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>{/*Día*/}\r\n                                                    <Col>{/*Mes*/}\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Mes</label>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <DropdownButton\r\n                                                                    as={ButtonGroup}\r\n                                                                    title={\"Mes\"}\r\n                                                                    className='scrollDelDrop'\r\n                                                                >\r\n                                                                    {this.state.listaMes.map((mes) => (\r\n                                                                        <Dropdown.Item eventKey={mes}>{mes}</Dropdown.Item>\r\n                                                                    ))}\r\n                                                                </DropdownButton>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>{/*Mes*/}\r\n                                                    <Col>{/*Mes*/}\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <label className=\"labelSetting\">Año</label>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <Input placeholder=\"Año\" type=\"number\" />\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>{/*Mes*/}\r\n                                                </Row>\r\n                                            </Col>{/*Segunda Columna*/}\r\n                                        </Row>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TestRegistroArticulo","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\HistorialPageCliente.js",["160","161"],"import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport './HistorialPageCliente.css';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationfactory from 'react-bootstrap-table2-paginator';\r\n\r\nclass HistorialPageCliente extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: { \"query\": \"USERNAME\", \"name\": \"Joseda8\" },\r\n            historial: null,\r\n            tableData: [],\r\n            usernameFlag: false,\r\n            clientNamFlag: false,\r\n            clientName: ''\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n\r\n        const userInfo = JSON.parse(localStorage.getItem('user_info'))\r\n\r\n        this.state.data.name = userInfo.client;\r\n\r\n        const url = `http://localhost:5000/client_history`;\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(this.state.data)\r\n        };\r\n\r\n\r\n\r\n        const response = await fetch(url, requestOptions);\r\n        const dataImprimir = await response.json();\r\n        this.testDatos(dataImprimir);\r\n\r\n    }\r\n\r\n    testDatos = (e) => {\r\n        this.setState({\r\n            historial: e\r\n        })\r\n\r\n        var temp = [];\r\n\r\n        var contador = 1;\r\n\r\n        for (let i = 0; i < 50; i++) {\r\n\r\n            if (this.state.historial[i] === undefined) {\r\n            } else {\r\n\r\n                for (let t = 0; t < this.state.historial[i].products.length; t++) {\r\n\r\n                    temp.push({\r\n                        'id': contador,\r\n                        'dia': this.state.historial[i].date,\r\n                        'precio': this.state.historial[i].cost,\r\n                        'nombre': this.state.historial[i].products[t].name,\r\n                        'cantidad': this.state.historial[i].products[t].amount\r\n                    });\r\n                }\r\n                contador = contador + 1;\r\n\r\n            }\r\n\r\n        }\r\n        this.actualizarTableData(temp);\r\n    }\r\n\r\n    clickBuscarHistorial = () => {\r\n        this.clickRealizarBusqueda();\r\n    }\r\n\r\n    clickNombre = (e) => {\r\n        this.setState({\r\n            clientName: e.target.value\r\n        })\r\n    }\r\n\r\n    clickTipoClienteNombre = () => {\r\n        if (this.state.clientNamFlag) {\r\n            this.setState({\r\n                clientNamFlag: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                clientNamFlag: true\r\n            })\r\n        }\r\n    }\r\n\r\n    clickTipoClienteUsername = () => {\r\n        if (this.state.usernameFlag) {\r\n            this.setState({\r\n                usernameFlag: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                usernameFlag: true\r\n            })\r\n        }\r\n    }\r\n\r\n    actualizarTableData(e) {\r\n        this.setState({\r\n            tableData: e\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const columnsHistorial = [\r\n            { dataField: 'id', text: 'ID de la compra' },\r\n            { dataField: 'dia', text: 'Fecha de la Compra' },\r\n            { dataField: 'precio', text: 'Precio total de la compra' },\r\n            { dataField: 'nombre', text: 'Nombre del Producto' },\r\n            { dataField: 'cantidad', text: 'Cantidad Comprada' }\r\n        ];\r\n        return (\r\n            <div className='HistorialPageCliente'>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className='m-auto'>\r\n\r\n                    <Navbar.Brand className=\"m-auto\">Bienvenid@</Navbar.Brand>\r\n\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n                        <Nav className=\"m-auto\">\r\n                            <Nav.Link href=\"./HistorialPageCliente\">Mi Historial</Nav.Link>\r\n                            <Nav.Link href=\"./CatalogoCliente\">Catálogo</Nav.Link>\r\n                            <Nav.Link href=\"./\">Salir</Nav.Link>\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <Jumbotron className=\"jumbotronSetting\">\r\n                    <h1>Mi Historial de compras</h1>\r\n                </Jumbotron>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card className=\"card-user\">\r\n                                <CardHeader>\r\n                                    <CardTitle tag=\"h3\">Historial de compras</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form>\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <BootstrapTable\r\n                                                    keyField=\"dia\"\r\n                                                    data={this.state.tableData}\r\n                                                    columns={columnsHistorial}\r\n                                                    pagination={paginationfactory()} />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n                <br />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistorialPageCliente","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\PantallaPrincipal.js",["162","163","164","165","166"],"import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './PantallaPrincipal.css';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Swal from 'sweetalert2';\r\nimport logo from './esports_logo.png';\r\n\r\n\r\nclass PantallaPrincipal extends Component {\r\n\r\n    constructor(props) {\r\n        console.log(\"Entra a Pantalla Principal\");\r\n        super(props)\r\n        this.state = {\r\n            selectFlag: false,\r\n            registerFlag: false,\r\n            selectCliente: false,\r\n            jsonLocalStorage: {\r\n                client: '',\r\n                products: null\r\n            },\r\n            username: '',\r\n            contraseña: '',\r\n            jsonLogIn: {\r\n                username: '',\r\n                password: ''\r\n            },\r\n            profileImg: logo,\r\n        }\r\n\r\n    }\r\n\r\n    llamadaALaBase = async () => {\r\n\r\n        const url = `http://localhost:5000/login`;\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(this.state.jsonLogIn)\r\n        };\r\n\r\n\r\n\r\n        const response = await fetch(url, requestOptions);\r\n        if (response.status === 401) {\r\n            Swal.fire(\r\n                'Error',\r\n                'El Username o la contraseña están incorrectos por favor ',\r\n                'error'\r\n            );\r\n        } else {\r\n            this.clickPresionadoCliente();\r\n            Swal.fire(\r\n                'Ingreso Exitoso',\r\n                'Bienvenid@',\r\n                'success'\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.selectFlag) {\r\n            return <Redirect to='/SelectAdmin' />\r\n        } else {\r\n            if (this.state.registerFlag) {\r\n                return <Redirect to='/RegisterPageClient' />\r\n            } else {\r\n                if (this.state.selectCliente) {\r\n                    return <Redirect to='/CatalogoCliente' />\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    clickPresionado = (event) => {\r\n        this.setState({\r\n            selectFlag: true\r\n        })\r\n    }\r\n\r\n    clickPresionadoRegister = (event) => {\r\n        this.setState({\r\n            registerFlag: true\r\n        })\r\n    }\r\n\r\n    clickPresionadoCliente = (event) => {\r\n        this.setState({\r\n            selectCliente: true\r\n        })\r\n    }\r\n\r\n    clickUsername = (event) => {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    clickContraseña = (event) => {\r\n        this.setState({\r\n            contraseña: event.target.value\r\n        })\r\n    }\r\n\r\n    verificarJson = () => {\r\n        if(this.state.username === ''){\r\n            Swal.fire(\r\n                'Error',\r\n                'Por favor escribir el nombre del usuario',\r\n                'error'\r\n            );\r\n        }else{\r\n            if(this.state.contraseña === ''){\r\n                Swal.fire(\r\n                    'Error',\r\n                    'Por favor escribir la contraseña',\r\n                    'error'\r\n                );\r\n            }else{\r\n                if(this.state.username === 'Admin'){\r\n                    this.clickPresionado();\r\n                }else{\r\n                    this.state.jsonLocalStorage.client = this.state.username;\r\n                    this.state.jsonLogIn.username = this.state.username;\r\n                    this.state.jsonLogIn.password = this.state.contraseña;\r\n\r\n                    this.llamadaALaBase();\r\n                }\r\n            }\r\n        }\r\n    }\r\n \r\n    render() {\r\n\r\n        localStorage.removeItem('user_info');\r\n\r\n        if (!localStorage.getItem('user_info')) {\r\n            localStorage.setItem('user_info', '');\r\n        }\r\n\r\n\r\n        localStorage.setItem('user_info', JSON.stringify(this.state.jsonLocalStorage));\r\n\r\n        return (\r\n            <div className='RegistrarArticulo'>\r\n                {this.renderRedirect()}\r\n                <br />\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <br />\r\n                            <img src={this.state.profileImg} alt=\"Imagen de Perfil\" className=\"testImage\"></img>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <Row>\r\n                        <Col>\r\n                            <Card className=\"card-user\">\r\n                                <CardBody>\r\n                                    <Form>\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <label className=\"labelSetting\">Nombre de usuario</label>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Input\r\n                                                    placeholder=\"Username\"\r\n                                                    type=\"text\"\r\n                                                    className=\"inputName\"\r\n                                                    onChange={this.clickUsername}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <label className=\"labelSetting\">Contraseña</label>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Input\r\n                                                    placeholder=\"Contraseña\"\r\n                                                    type=\"password\"\r\n                                                    className=\"inputName\"\r\n                                                    onChange={this.clickContraseña}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Button\r\n                                                    className=\"btn-round\"\r\n                                                    color=\"primary\"\r\n                                                    onClick={this.verificarJson}\r\n                                                >\r\n                                                    Ingresar\r\n                                                        </Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button\r\n                                                    className=\"btn-round\"\r\n                                                    color=\"primary\"\r\n                                                    onClick={this.clickPresionadoRegister}\r\n                                                >\r\n                                                    Registrarme\r\n                                                        </Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PantallaPrincipal","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\CatalogoCliente.js",["167","168","169","170","171","172"],"import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport './CatalogoCliente.css';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationfactory from 'react-bootstrap-table2-paginator';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CatalogoCliente extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tableData: [],\r\n            carrito: [],\r\n            carritoItems: 0,\r\n            modalShow: false,\r\n            closeModal: false,\r\n            idCarrito: 0,\r\n            unidadesCarrito: 0,\r\n            comprasFlag: false,\r\n            jsonLocalStorage: {\r\n                client: '',\r\n                products: null\r\n            },\r\n            nombreCliente: ''\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    componentDidMount = async (e) => {\r\n        this.setState({\r\n            carrito: JSON.parse(window.localStorage.getItem('cart')),\r\n            carritoItems: JSON.parse(window.localStorage.getItem('cart')).length\r\n        })\r\n        fetch(`http://localhost:5000/get_collection?collection=product`)\r\n            .then(response => response.json())\r\n            .then(response => this.listData(response))\r\n\r\n            \r\n    }\r\n\r\n    listData = (e) => {\r\n        const userInfo = JSON.parse(localStorage.getItem('user_info'));\r\n        this.setState({\r\n            tableData: e,\r\n            nombreCliente: userInfo.client\r\n        })\r\n    }\r\n\r\n    ActualizarCarritoItems = (idDelCarrito) => {\r\n        if (this.state.unidadesCarrito === 0) {\r\n            Swal.fire(\r\n                'Error',\r\n                'Por favor indique las unidades que quiere comprar del artículo',\r\n                'error'\r\n            );\r\n        } else {\r\n            this.setState({\r\n                carritoItems: this.state.carritoItems + 1\r\n            })\r\n            this.ActualizarCarrito(idDelCarrito);\r\n        }\r\n\r\n    }\r\n\r\n    ActualizarCarrito = (idDelCarrito) => {\r\n        this.state.carrito.push({\r\n            'name': this.state.tableData[idDelCarrito].name,\r\n            'amount': this.state.unidadesCarrito,\r\n            'price': this.state.tableData[idDelCarrito].price\r\n        });\r\n        this.state.jsonLocalStorage.products = this.state.carrito;\r\n        this.state.jsonLocalStorage.client = this.state.nombreCliente;\r\n        Swal.fire(\r\n            'Artículo añadido',\r\n            'El artículo ' + this.state.tableData[idDelCarrito].name + ' se a añadido a su carrito',\r\n            'success'\r\n        );\r\n\r\n        console.log();\r\n        console.log(\"Esto es lo del local Storage\");\r\n        console.log(this.state.jsonLocalStorage);\r\n        console.log();\r\n\r\n        localStorage.setItem('user_info', JSON.stringify(this.state.jsonLocalStorage));\r\n        localStorage.setItem('cart', JSON.stringify(this.state.carrito));\r\n    }\r\n\r\n    VerCarrito = (e) => {\r\n        this.setState({\r\n            modalShow: true\r\n        })\r\n    }\r\n\r\n    VaciarCarrito = (e) => {\r\n        var test = [];\r\n        this.setState({\r\n            carrito: test,\r\n            carritoItems: 0\r\n        })\r\n        localStorage.setItem('user_info', JSON.stringify(this.state.jsonLocalStorage));\r\n        \r\n        localStorage.setItem('cart', JSON.stringify(this.state.carrito));\r\n\r\n        Swal.fire(\r\n            'Vacío exitoso',\r\n            'El carrito se ha vaciado de manera exitosa',\r\n            'success'\r\n        );\r\n    }\r\n\r\n    modalCLose = (e) => {\r\n        this.setState({\r\n            modalShow: false\r\n        })\r\n    }\r\n\r\n    ActualizarUnidadesCarrito = (e) => {\r\n        this.setState({\r\n            unidadesCarrito: Number(e.target.value)\r\n        })\r\n    }\r\n\r\n    realizarCompra = () => {\r\n        this.setState({\r\n            comprasFlag: true\r\n        })\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.comprasFlag) {\r\n            return <Redirect to='/ComprasPage' />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const userInfo = JSON.parse(localStorage.getItem('user_info'));\r\n        var test = '';\r\n\r\n        const columns = [\r\n            { dataField: 'name', text: 'Nombre del Producto' },\r\n            { dataField: 'amount', text: 'Unidades del Producto' },\r\n            { dataField: 'price', text: 'Precio del Producto' }\r\n        ];\r\n\r\n        if(window.localStorage.getItem('cart') ===null){\r\n            window.localStorage.setItem('cart', JSON.stringify([]))\r\n        }\r\n\r\n        return (\r\n            <div className='CatalogoCliente'>\r\n                {this.renderRedirect()}\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className='m-auto'>\r\n\r\n                    <Navbar.Brand className=\"m-auto\">Bienvenid@</Navbar.Brand>\r\n\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n                        <Nav className=\"m-auto\">\r\n                            <Nav.Link href=\"./HistorialPageCliente\">Mi Historial</Nav.Link>\r\n                            <Nav.Link href=\"./CatalogoCliente\">Catálogo</Nav.Link>\r\n                            <Nav.Link href=\"./\">Salir</Nav.Link>\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <Jumbotron className=\"jumbotronSetting\">\r\n                    <h1>Catálogo</h1>\r\n                </Jumbotron>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card className=\"card-user\">\r\n                                <CardHeader>\r\n                                    <CardTitle tag=\"h3\">Catálogo</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <label className=\"labelSetting\">Carrito: {this.state.carritoItems}</label>\r\n\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Button\r\n                                                    variant=\"dark\" size=\"lg\"\r\n                                                    onClick={this.VerCarrito}\r\n                                                >\r\n                                                    Ver Carrito\r\n                                                        </Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button\r\n                                                    variant=\"dark\" size=\"lg\"\r\n                                                    onClick={this.VaciarCarrito}\r\n                                                >\r\n                                                    Vaciar Carrito\r\n                                                        </Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <label className=\"labelSetting\">Seleccione el producto que desea comprar</label>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                            <br />\r\n                            <Row>\r\n                                <Col>\r\n                                    {this.state.tableData.map((character, index) => {\r\n                                        const handler = function (e) {\r\n                                            test = e.target.getAttribute(\"data-index\");\r\n                                            this.ActualizarCarritoItems(test);\r\n                                        }.bind(this);\r\n                                        return (\r\n                                            <div className=\"card-container\"\r\n                                                style={{\r\n                                                    width: \"50%\",\r\n                                                    border: \"solid 3px #d3d3d3\",\r\n                                                    margin: \"10px auto\"\r\n                                                }}\r\n                                                key={index}\r\n                                            >\r\n                                                <p>\r\n                                                    <strong>{character.name}</strong>\r\n                                                </p>\r\n                                                <br />\r\n                                                <img src={character.img} alt=\"Imagen de Perfil\" className=\"testImage\"></img>\r\n                                                <br />\r\n                                                <br />\r\n                                                <p>Marca: {character.brand}</p>\r\n                                                <p>Precio: ₡{character.price}</p>\r\n                                                <p>Unidades disponibles: {character.units}</p>\r\n                                                <p>Ofertas: {character.offer!==undefined ? JSON.stringify(character.offer.map((offer, index) => {\r\n                                                    return JSON.stringify(offer.name) + ': ' + JSON.stringify(offer.description) + ' '\r\n                                                })).replaceAll(\"\\\"\", \"\").replaceAll(\"\\[\", \"\").replaceAll(\"\\]\", \"\").replaceAll(\"\\\\\", \"\") : 'None'}</p>\r\n                                                <br />\r\n                                                <p>Unidades a comprar</p>\r\n                                                <Input className=\"mb-2 mr-sm-2\" placeholder=\"Unidades\" type=\"number\" onChange={this.ActualizarUnidadesCarrito} />\r\n                                                <Button\r\n                                                    variant=\"dark\" size=\"lg\"\r\n                                                    onClick={handler}\r\n                                                    data-index={index}\r\n                                                >\r\n                                                    Añadir al Carrito\r\n                                                        </Button>\r\n                                                <br />\r\n                                                <br />\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                        centered\r\n                        show={this.state.modalShow}\r\n                    >\r\n                        <Modal.Header closeButton onClick={this.modalCLose}>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Mi carrito\r\n              </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <h4>Mis artículos en el carrito</h4>\r\n                            <br />\r\n                            <BootstrapTable\r\n                                keyField=\"name\"\r\n                                data={this.state.carrito}\r\n                                columns={columns} />\r\n                            <br />\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button onClick={this.realizarCompra}>Realizar compra</Button>\r\n                            <Button onClick={this.modalCLose}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                </Container>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CatalogoCliente","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\ComprasPage.js",["173","174","175"],"import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport './ComprasPage.css';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationfactory from 'react-bootstrap-table2-paginator';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass ComprasPage extends Component {\r\n\r\n    constructor(props) {\r\n        console.log(\"entra a ComprasPage\");\r\n        super(props)\r\n        this.state = {\r\n            tableData: [],\r\n            nombreCliente: '',\r\n            selectDia: '',\r\n            selectMes: '',\r\n            mesJson: '',\r\n            selectAño: '',\r\n            fechaCompleta: '',\r\n            listaDia: [\r\n                1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n                11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\r\n                21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31\r\n            ],\r\n\r\n            listaMes: [\r\n                \"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\",\r\n                \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\",\r\n                \"Octubre\", \"Noviembre\", \"Diciembre\"\r\n            ],\r\n\r\n            devolvermeFlag: false,\r\n\r\n            jsonRespuesta: {\r\n                'client': '',\r\n                'date': '',\r\n                'products': null\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = async (e) => {\r\n        this.ActualizartableData();\r\n    }\r\n\r\n    /*\r\n\r\n    Función que realiza la compra\r\n\r\n    */\r\n\r\n    registrarCompraNueva = async () => {\r\n\r\n        const url = `http://localhost:5000/add_purchase`;\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(this.state.jsonRespuesta)\r\n        };\r\n\r\n\r\n\r\n        const response = await fetch(url, requestOptions);\r\n        if(response.status === 409){\r\n            Swal.fire(\r\n                'Error',\r\n                'Ya no hay inventario disponible para ese artículo, por favor escoja otro artículo',\r\n                'error'\r\n            );\r\n        }else{\r\n            if(response.status === 404){\r\n                Swal.fire(\r\n                    'Error',\r\n                    'Hubo un error al realizar la compra, por favor intente más tarde',\r\n                    'error'\r\n                );\r\n            }else{\r\n                window.localStorage.removeItem('cart')\r\n                Swal.fire(\r\n                    'Compra Exitosa',\r\n                    'La compra se ha realizado de manera exitosa',\r\n                    'success'\r\n                );\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    verificacionCompra = () => {\r\n        this.creacionJsonRespuesta();\r\n        if(this.state.selectDia === ''){\r\n            Swal.fire(\r\n                'Error',\r\n                'Por favor indique el día de la compra',\r\n                'error'\r\n            );\r\n        }else{\r\n            if(this.state.selectMes === ''){\r\n                Swal.fire(\r\n                    'Error',\r\n                    'Por favor indique el mes de la compra',\r\n                    'error'\r\n                );\r\n            }else{\r\n                if(this.state.selectAño === ''){\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'Por favor indique el año de la compra',\r\n                        'error'\r\n                    );\r\n                }else{\r\n                    const swalWithBootstrapButtons = Swal.mixin({\r\n                        customClass: {\r\n                            confirmButton: 'btn btn-success',\r\n                            cancelButton: 'btn btn-danger'\r\n                        },\r\n                        buttonsStyling: false\r\n                    })\r\n            \r\n                    swalWithBootstrapButtons.fire({\r\n                        title: 'Confirmar registro',\r\n                        text: \"Desea registrar esta promoción?\",\r\n                        icon: 'warning',\r\n                        showCancelButton: true,\r\n                        confirmButtonText: 'Si, deseo registrar',\r\n                        cancelButtonText: 'No',\r\n                        reverseButtons: true\r\n                    }).then((result) => {\r\n                        if (result.isConfirmed) {\r\n                            this.creacionJsonRespuesta();\r\n                            this.registrarCompraNueva();\r\n                        } else if (\r\n                            /* Read more about handling dismissals below */\r\n                            result.dismiss === Swal.DismissReason.cancel\r\n                        ) {\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    creacionJsonRespuesta = () => {\r\n        this.ActualizarFechaCompleta();\r\n        const userInfo = JSON.parse(localStorage.getItem('user_info'));\r\n        this.state.jsonRespuesta.client = userInfo.client;\r\n        this.state.jsonRespuesta.date = this.state.fechaCompleta;\r\n        this.state.jsonRespuesta.products = this.state.tableData;\r\n\r\n\r\n\r\n        console.log();\r\n        console.log(\"Este es el Json de la respuesta\");\r\n        console.log(this.state.jsonRespuesta);\r\n        console.log();\r\n\r\n    }\r\n\r\n    listData = (e) => {\r\n        this.setState({\r\n            tableData: e\r\n        })\r\n    }\r\n\r\n    clickDia = (e) => {\r\n        this.setState({\r\n            selectDia: e\r\n        })\r\n    }\r\n\r\n    clickMes = (e) => {\r\n        this.setState({\r\n            selectMes: e\r\n        })\r\n        if (this.state.selectMes === 'Enero') {\r\n            this.setState({\r\n                mesJson: '01'\r\n            })\r\n        } else {\r\n            if (this.state.selectMes === 'Febrero') {\r\n                this.setState({\r\n                    mesJson: '02'\r\n                })\r\n            } else {\r\n                if (this.state.selectMes === 'Marzo') {\r\n                    this.setState({\r\n                        mesJson: '03'\r\n                    })\r\n                } else {\r\n                    if (this.state.selectMes === 'Abril') {\r\n                        this.setState({\r\n                            mesJson: '04'\r\n                        })\r\n                    } else {\r\n                        if (this.state.selectMes === 'Mayo') {\r\n                            this.setState({\r\n                                mesJson: '05'\r\n                            })\r\n                        } else {\r\n                            if (this.state.selectMes === 'Junio') {\r\n                                this.setState({\r\n                                    mesJson: '06'\r\n                                })\r\n                            } else {\r\n                                if (this.state.selectMes === 'Julio') {\r\n                                    this.setState({\r\n                                        mesJson: '07'\r\n                                    })\r\n                                } else {\r\n                                    if (this.state.selectMes === 'Agosto') {\r\n                                        this.setState({\r\n                                            mesJson: '08'\r\n                                        })\r\n                                    } else {\r\n                                        if (this.state.selectMes === 'Septiembre') {\r\n                                            this.setState({\r\n                                                mesJson: '09'\r\n                                            })\r\n                                        } else {\r\n                                            if (this.state.selectMes === 'Octubre') {\r\n                                                this.setState({\r\n                                                    mesJson: '10'\r\n                                                })\r\n                                            } else {\r\n                                                if (this.state.selectMes === 'Noviembre') {\r\n                                                    this.setState({\r\n                                                        mesJson: '11'\r\n                                                    })\r\n                                                } else {\r\n                                                    this.setState({\r\n                                                        mesJson: '12'\r\n                                                    })\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    clickAño = (e) => {\r\n        this.setState({\r\n            selectAño: e.target.value\r\n        })\r\n    }\r\n\r\n    ActualizarFechaCompleta = () => {\r\n        this.setState({\r\n            fechaCompleta: this.state.selectAño + this.state.mesJson + this.state.selectDia\r\n        })\r\n    }\r\n\r\n    ActualizartableData = () => {\r\n        const userInfo = JSON.parse(localStorage.getItem('user_info'));\r\n        this.setState({\r\n            tableData: userInfo.products\r\n        })\r\n        console.log();\r\n        console.log(userInfo.products);\r\n        console.log();\r\n    }\r\n\r\n    clickAtras = () => {\r\n        this.setState({\r\n            devolvermeFlag: true\r\n        })\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.devolvermeFlag) {\r\n            return <Redirect to='/CatalogoCliente' />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const userInfo = JSON.parse(localStorage.getItem('user_info'));\r\n\r\n        console.log('Me lo manda de la página principal');\r\n        console.log(userInfo);\r\n\r\n        const columns = [\r\n            { dataField: 'name', text: 'Nombre del Producto' },\r\n            { dataField: 'amount', text: 'Unidades del Producto' },\r\n            { dataField: 'price', text: 'Precio del Producto' }\r\n        ];\r\n        return (\r\n            <div className='ComprasPage'>\r\n                {this.renderRedirect()}\r\n                <Jumbotron className=\"jumbotronSetting\">\r\n                    <h1>Realizar la compra</h1>\r\n                </Jumbotron>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card className=\"card-user\">\r\n                                <CardHeader>\r\n                                    <CardTitle tag=\"h3\">Realizar la compra</CardTitle>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <label className=\"labelSetting\">Seleccione la fecha de la compra</label>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <label className=\"labelSetting\">Día</label>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <label className=\"labelSetting\">Mes</label>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <label className=\"labelSetting\">Año</label>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <DropdownButton\r\n                                                    as={ButtonGroup}\r\n                                                    title={\"Día\"}\r\n                                                    className='scrollDelDrop'\r\n                                                    onSelect={this.clickDia}\r\n                                                >\r\n                                                    {this.state.listaDia.map((dia) => (\r\n                                                        <Dropdown.Item eventKey={dia}>{dia}</Dropdown.Item>\r\n                                                    ))}\r\n                                                </DropdownButton>\r\n                                                <p>{this.state.selectDia}</p>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <DropdownButton\r\n                                                    as={ButtonGroup}\r\n                                                    title={\"Mes\"}\r\n                                                    className='scrollDelDrop'\r\n                                                    onSelect={this.clickMes}\r\n                                                >\r\n                                                    {this.state.listaMes.map((Mes) => (\r\n                                                        <Dropdown.Item eventKey={Mes}>{Mes}</Dropdown.Item>\r\n                                                    ))}\r\n                                                </DropdownButton>\r\n                                                <p>{this.state.selectMes}</p>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Input placeholder=\"Año\" type=\"number\" onChange={this.clickAño} />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <label className=\"labelSetting\">Mi carrito de compras</label>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <BootstrapTable\r\n                                                    keyField=\"dia\"\r\n                                                    data={this.state.tableData}\r\n                                                    columns={columns}\r\n                                                    pagination={paginationfactory()} />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Button\r\n                                                    variant=\"dark\" size=\"lg\"\r\n                                                    onClick={this.verificacionCompra}\r\n                                                >\r\n                                                    Realizar la compra\r\n                                                        </Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button\r\n                                                    variant=\"dark\" size=\"lg\"\r\n                                                    onClick={this.clickAtras}\r\n                                                >\r\n                                                    Atrás\r\n                                                        </Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ComprasPage","C:\\Users\\User\\Documents\\GitHub\\Proyecto-3\\proyecto-3\\src\\BusquedaArticulo.js",["176","177"],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":13,"column":8,"nodeType":"184","messageId":"185","endLine":13,"endColumn":28},{"ruleId":"182","severity":1,"message":"186","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":12},{"ruleId":"182","severity":1,"message":"187","line":13,"column":5,"nodeType":"184","messageId":"185","endLine":13,"endColumn":15},{"ruleId":"182","severity":1,"message":"187","line":13,"column":5,"nodeType":"184","messageId":"185","endLine":13,"endColumn":15},{"ruleId":"182","severity":1,"message":"188","line":15,"column":5,"nodeType":"184","messageId":"185","endLine":15,"endColumn":14},{"ruleId":"182","severity":1,"message":"189","line":24,"column":8,"nodeType":"184","messageId":"185","endLine":24,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":106,"column":9,"nodeType":"192","endLine":106,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":107,"column":9,"nodeType":"192","endLine":107,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":108,"column":9,"nodeType":"192","endLine":108,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":109,"column":9,"nodeType":"192","endLine":109,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":110,"column":9,"nodeType":"192","endLine":110,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":111,"column":9,"nodeType":"192","endLine":111,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":112,"column":9,"nodeType":"192","endLine":112,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":113,"column":9,"nodeType":"192","endLine":113,"endColumn":28},{"ruleId":"182","severity":1,"message":"187","line":13,"column":5,"nodeType":"184","messageId":"185","endLine":13,"endColumn":15},{"ruleId":"182","severity":1,"message":"188","line":15,"column":5,"nodeType":"184","messageId":"185","endLine":15,"endColumn":14},{"ruleId":"182","severity":1,"message":"193","line":23,"column":8,"nodeType":"184","messageId":"185","endLine":23,"endColumn":22},{"ruleId":"182","severity":1,"message":"189","line":24,"column":8,"nodeType":"184","messageId":"185","endLine":24,"endColumn":25},{"ruleId":"182","severity":1,"message":"194","line":174,"column":13,"nodeType":"184","messageId":"185","endLine":174,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":289,"column":9,"nodeType":"192","endLine":289,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":290,"column":9,"nodeType":"192","endLine":290,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":291,"column":9,"nodeType":"192","endLine":291,"endColumn":33},{"ruleId":"190","severity":1,"message":"191","line":292,"column":9,"nodeType":"192","endLine":292,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":293,"column":9,"nodeType":"192","endLine":293,"endColumn":28},{"ruleId":"182","severity":1,"message":"186","line":9,"column":8,"nodeType":"184","messageId":"185","endLine":9,"endColumn":12},{"ruleId":"182","severity":1,"message":"195","line":11,"column":5,"nodeType":"184","messageId":"185","endLine":11,"endColumn":11},{"ruleId":"182","severity":1,"message":"196","line":16,"column":5,"nodeType":"184","messageId":"185","endLine":16,"endColumn":10},{"ruleId":"190","severity":1,"message":"191","line":40,"column":13,"nodeType":"192","endLine":40,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":41,"column":13,"nodeType":"192","endLine":41,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":45,"column":17,"nodeType":"192","endLine":45,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":46,"column":17,"nodeType":"192","endLine":46,"endColumn":32},{"ruleId":"182","severity":1,"message":"189","line":20,"column":8,"nodeType":"184","messageId":"185","endLine":20,"endColumn":25},{"ruleId":"182","severity":1,"message":"197","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":13},{"ruleId":"182","severity":1,"message":"187","line":13,"column":5,"nodeType":"184","messageId":"185","endLine":13,"endColumn":15},{"ruleId":"182","severity":1,"message":"188","line":15,"column":5,"nodeType":"184","messageId":"185","endLine":15,"endColumn":14},{"ruleId":"182","severity":1,"message":"193","line":23,"column":8,"nodeType":"184","messageId":"185","endLine":23,"endColumn":22},{"ruleId":"182","severity":1,"message":"189","line":24,"column":8,"nodeType":"184","messageId":"185","endLine":24,"endColumn":25},{"ruleId":"182","severity":1,"message":"194","line":164,"column":13,"nodeType":"184","messageId":"185","endLine":164,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":278,"column":9,"nodeType":"192","endLine":278,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":279,"column":9,"nodeType":"192","endLine":279,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":280,"column":9,"nodeType":"192","endLine":280,"endColumn":33},{"ruleId":"190","severity":1,"message":"191","line":281,"column":9,"nodeType":"192","endLine":281,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":282,"column":9,"nodeType":"192","endLine":282,"endColumn":28},{"ruleId":"182","severity":1,"message":"198","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":14},{"ruleId":"182","severity":1,"message":"199","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":11},{"ruleId":"182","severity":1,"message":"193","line":22,"column":8,"nodeType":"184","messageId":"185","endLine":22,"endColumn":22},{"ruleId":"182","severity":1,"message":"189","line":23,"column":8,"nodeType":"184","messageId":"185","endLine":23,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":307,"column":9,"nodeType":"192","endLine":307,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":308,"column":9,"nodeType":"192","endLine":308,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":309,"column":9,"nodeType":"192","endLine":309,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":310,"column":9,"nodeType":"192","endLine":310,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":311,"column":9,"nodeType":"192","endLine":311,"endColumn":28},{"ruleId":"182","severity":1,"message":"186","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":12},{"ruleId":"182","severity":1,"message":"195","line":9,"column":5,"nodeType":"184","messageId":"185","endLine":9,"endColumn":11},{"ruleId":"182","severity":1,"message":"187","line":13,"column":5,"nodeType":"184","messageId":"185","endLine":13,"endColumn":15},{"ruleId":"182","severity":1,"message":"188","line":15,"column":5,"nodeType":"184","messageId":"185","endLine":15,"endColumn":14},{"ruleId":"182","severity":1,"message":"193","line":23,"column":8,"nodeType":"184","messageId":"185","endLine":23,"endColumn":22},{"ruleId":"182","severity":1,"message":"189","line":24,"column":8,"nodeType":"184","messageId":"185","endLine":24,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":94,"column":9,"nodeType":"192","endLine":94,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":95,"column":9,"nodeType":"192","endLine":95,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":96,"column":9,"nodeType":"192","endLine":96,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":97,"column":9,"nodeType":"192","endLine":97,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":98,"column":9,"nodeType":"192","endLine":98,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":99,"column":9,"nodeType":"192","endLine":99,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":100,"column":9,"nodeType":"192","endLine":100,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":101,"column":9,"nodeType":"192","endLine":101,"endColumn":28},{"ruleId":"182","severity":1,"message":"195","line":10,"column":5,"nodeType":"184","messageId":"185","endLine":10,"endColumn":11},{"ruleId":"182","severity":1,"message":"196","line":15,"column":5,"nodeType":"184","messageId":"185","endLine":15,"endColumn":10},{"ruleId":"182","severity":1,"message":"200","line":10,"column":5,"nodeType":"184","messageId":"185","endLine":10,"endColumn":15},{"ruleId":"182","severity":1,"message":"201","line":12,"column":5,"nodeType":"184","messageId":"185","endLine":12,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":136,"column":21,"nodeType":"192","endLine":136,"endColumn":48},{"ruleId":"190","severity":1,"message":"191","line":137,"column":21,"nodeType":"192","endLine":137,"endColumn":41},{"ruleId":"190","severity":1,"message":"191","line":138,"column":21,"nodeType":"192","endLine":138,"endColumn":41},{"ruleId":"182","severity":1,"message":"189","line":20,"column":8,"nodeType":"184","messageId":"185","endLine":20,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":90,"column":9,"nodeType":"192","endLine":90,"endColumn":36},{"ruleId":"190","severity":1,"message":"191","line":91,"column":9,"nodeType":"192","endLine":91,"endColumn":36},{"ruleId":"182","severity":1,"message":"202","line":155,"column":15,"nodeType":"184","messageId":"185","endLine":155,"endColumn":23},{"ruleId":"203","severity":1,"message":"204","line":264,"column":86,"nodeType":"205","messageId":"206","endLine":264,"endColumn":87,"suggestions":"207"},{"ruleId":"203","severity":1,"message":"208","line":264,"column":107,"nodeType":"205","messageId":"206","endLine":264,"endColumn":108,"suggestions":"209"},{"ruleId":"190","severity":1,"message":"191","line":166,"column":9,"nodeType":"192","endLine":166,"endColumn":33},{"ruleId":"190","severity":1,"message":"191","line":167,"column":9,"nodeType":"192","endLine":167,"endColumn":33},{"ruleId":"190","severity":1,"message":"191","line":168,"column":9,"nodeType":"192","endLine":168,"endColumn":33},{"ruleId":"182","severity":1,"message":"189","line":20,"column":8,"nodeType":"184","messageId":"185","endLine":20,"endColumn":25},{"ruleId":"210","severity":1,"message":"211","line":347,"column":49,"nodeType":"212","endLine":347,"endColumn":134},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'TestRegistroArticulo' is defined but never used.","Identifier","unusedVar","'Swal' is defined but never used.","'CardFooter' is defined but never used.","'FormGroup' is defined but never used.","'paginationfactory' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'BootstrapTable' is defined but never used.","'tem' is assigned a value but never used.","'Button' is defined but never used.","'Input' is defined but never used.","'Image' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'CardHeader' is defined but never used.","'CardTitle' is defined but never used.","'userInfo' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["215","216"],"Unnecessary escape character: \\].",["217","218"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"messageId":"219","fix":"220","desc":"221"},{"messageId":"222","fix":"223","desc":"224"},{"messageId":"219","fix":"225","desc":"221"},{"messageId":"222","fix":"226","desc":"224"},"removeEscape",{"range":"227","text":"228"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"229","text":"230"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"231","text":"228"},{"range":"232","text":"230"},[10358,10359],"",[10358,10358],"\\",[10379,10380],[10379,10379]]